[{"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/index.js":"1","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/App.js":"2","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/reportWebVitals.js":"3","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/serviceWorker.js":"4","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Menu.js":"5","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/BASE.js":"6","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Formulario_Iprev.js":"7","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Funcionario.js":"8","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Veiculos.js":"9","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/molecule/AbaEndereco.js":"10","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Agencia.js":"11","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Router.js":"12","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaFuncionario.js":"13","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/molecule/Contato.js":"14","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Pesquisa_Tabela_Preco.js":"15","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Parceiros.js":"16","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaParceiros.js":"17","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaAgencia.js":"18","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaVeiculos.js":"19","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaAnunciantes.js":"20","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Anunciantes.js":"21","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Tabela_Preco.js":"22","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/TESTE_TABELA.js":"23","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Historico.js":"24","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaMapaPi.js":"25","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaMapaPI.js":"26","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_MapaPI.js":"27","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Login.js":"28"},{"size":679,"mtime":1629851289145,"results":"29","hashOfConfig":"30"},{"size":537,"mtime":1621975617310,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1621975617315,"results":"32","hashOfConfig":"30"},{"size":5003,"mtime":1621975617315,"results":"33","hashOfConfig":"30"},{"size":2656,"mtime":1629852841793,"results":"34","hashOfConfig":"30"},{"size":1083,"mtime":1621975617311,"results":"35","hashOfConfig":"30"},{"size":6282,"mtime":1629846831326,"results":"36","hashOfConfig":"30"},{"size":17078,"mtime":1629848064720,"results":"37","hashOfConfig":"30"},{"size":16190,"mtime":1629848168604,"results":"38","hashOfConfig":"30"},{"size":6205,"mtime":1629845830807,"results":"39","hashOfConfig":"30"},{"size":12905,"mtime":1629848074192,"results":"40","hashOfConfig":"30"},{"size":1898,"mtime":1629852859883,"results":"41","hashOfConfig":"30"},{"size":7617,"mtime":1629847961089,"results":"42","hashOfConfig":"30"},{"size":3753,"mtime":1621975617315,"results":"43","hashOfConfig":"30"},{"size":6231,"mtime":1629852919802,"results":"44","hashOfConfig":"30"},{"size":13821,"mtime":1629848165531,"results":"45","hashOfConfig":"30"},{"size":7667,"mtime":1629847973183,"results":"46","hashOfConfig":"30"},{"size":7615,"mtime":1629847944963,"results":"47","hashOfConfig":"30"},{"size":7773,"mtime":1629847981220,"results":"48","hashOfConfig":"30"},{"size":7649,"mtime":1629847954379,"results":"49","hashOfConfig":"30"},{"size":14625,"mtime":1629848069458,"results":"50","hashOfConfig":"30"},{"size":7580,"mtime":1629848021365,"results":"51","hashOfConfig":"30"},{"size":2241,"mtime":1621975617313,"results":"52","hashOfConfig":"30"},{"size":3257,"mtime":1621975617312,"results":"53","hashOfConfig":"30"},{"size":6587,"mtime":1626224701107,"results":"54","hashOfConfig":"30"},{"size":6417,"mtime":1629847968177,"results":"55","hashOfConfig":"30"},{"size":49929,"mtime":1629848143678,"results":"56","hashOfConfig":"30"},{"size":1775,"mtime":1629851172998,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gar1rf",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/index.js",[],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/App.js",[],["135","136"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/reportWebVitals.js",[],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/serviceWorker.js",[],["137","138"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Menu.js",["139"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/BASE.js",["140","141","142","143","144","145","146","147","148","149","150"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\n\n\nclass BASE extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n         }\n\n    }\n\n    \n  \n   \n    render() {\n      return (\n        <div>\n <Modal\n                width={600}\n                title=\"Cadastro de FuncionÃ¡rios\"\n                visible={this.state.visible}\n                footer={[\n                    <Button key=\"back\" onClick={console.log()}>\n                        Cancelar\n              </Button>,\n                    <Button key=\"Cadastrar\" type=\"primary\" onClick={console.log()}>\n                        Cadastrar\n              </Button>,\n                ]}\n            >\n                <h1>OK</h1>\n                </Modal>\n        </div>\n      );\n    }\n  }\n  \n  export default BASE;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Formulario_Iprev.js",["151","152","153","154","155","156","157","158","159","160"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Funcionario.js",["161","162","163","164","165","166","167"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport AbaEndereco from '../molecule/AbaEndereco'\nimport HistFunc from '/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Historico'\nimport moment from 'moment';\nconst dateFormat = 'DD/MM/YYYY';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nclass CadFuncionario extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      select_permission: undefined,\n      nascimento: '05/09/1964',\n      admissao: '05/09/1964',\n      desligamento: '05/09/1964',\n      cod_funcionario: undefined,\n\n      id: \"\",\n      nome: \"\",\n      funcao: \"\",\n      email: \"\",\n      telefone: \"\",\n      tp_acesso: \"\",\n      observacao: \"\",\n      cep: \"\",\n      rua: \"\",\n      bairro: \"\",\n      cod_cidade: \"\",\n      uf: \"\",\n      complemento: \"\",\n      rg: \"\",\n      cpf: \"\",\n      ctps: \"\",\n      reservista: \"\",\n      titulo: \"\",\n      dt_nascimento: new Date(),\n      dt_admissao: new Date(),\n      dt_desligamento: new Date(),\n      status: \"\",\n      genero: \"\",\n      banco: \"\",\n      agencia: \"\",\n      conta: \"\",\n      tp_conta: \"\",\n      historico: \"\",\n      botao: \"Editar\",\n\n\n      aba_endereco: {},\n      lista_tp_acessos: [{ value: 1, label: \"Total\" }, { value: 2, label: \"Comercial\" }, { value: 3, label: \"Cadastro e RelatÃ³rios\" }],\n      lista_genero: [{ value: 1, label: \"Masculino\" }, { value: 2, label: \"Feminino\" }],\n      lista_status: [{ value: 1, label: \"Ativo\" }, { value: 2, label: \"Inativo\" }]\n\n\n    }\n    this.handlechangeCPF = this.handlechangeCPF.bind(this)\n    this.convertData = this.convertData.bind(this)\n    this.cadastrar = this.cadastrar.bind(this)\n    this.GeraSenha = this.GeraSenha.bind(this)\n  }\n  componentDidMount() {\n\n    if (this.props.funcionario !== undefined) {\n      console.log(\"cod_funcionario: que chegou\", this.props.funcionario)\n      fetch('/api/carregadadosfuncionario', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_funcionario': this.props.funcionario\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n\n\n          if ('resultado' in json) {\n            // console.log(json.resultado)\n\n            this.setState({ id: json.resultado.id })\n            this.setState({ nome: json.resultado.nome })\n            this.setState({ funcao: json.resultado.funcao })\n            this.setState({ email: json.resultado.email })\n            this.setState({ telefone: json.resultado.telefone })\n            this.setState({ tp_acesso: json.resultado.tp_acesso })\n            this.setState({ observacao: json.resultado.obs })\n            this.setState({ cep: json.resultado.cep })\n            this.setState({ rua: json.resultado.rua })\n            this.setState({ bairro: json.resultado.bairro })\n            this.setState({ cod_cidade: json.resultado.cod_cidade })\n            this.setState({ uf: json.resultado.estado })\n            this.setState({ complemento: json.resultado.complemento })\n            this.setState({ rg: json.resultado.rg })\n            this.setState({ cpf: json.resultado.cpf })\n            this.setState({ ctps: json.resultado.ctps })\n            this.setState({ reservista: json.resultado.reservista })\n            this.setState({ titulo: json.resultado.titulo })\n            this.setState({ dt_nascimento: json.resultado.dt_nascimento })\n            this.setState({ dt_admissao: json.resultado.dt_admissao })\n            this.setState({ dt_desligamento: json.resultado.dt_desligamento })\n            this.setState({ status: json.resultado.status })\n            this.setState({ genero: json.resultado.genero })\n            this.setState({ banco: json.resultado.banco })\n            this.setState({ agencia: json.resultado.agencia })\n            this.setState({ conta: json.resultado.conta })\n            this.setState({ tp_conta: json.resultado.tp_conta })\n\n\n\n            let dados = {\n              id_funcionario: json.resultado.id,\n              cep: json.resultado.cep,\n              rua: json.resultado.rua,\n              bairro: json.resultado.bairro,\n              cod_cidade: json.resultado.cod_cidade,\n              uf: json.resultado.estado,\n              complemento: json.resultado.complemento,\n            }\n            localStorage.setItem('aba_endereco', JSON.stringify(dados))\n            this.setState({ aba_endereco: dados })\n\n            this.setState({ 'visible': true })\n\n\n          } else {\n            alert(json)\n          }\n\n\n        })\n\n    } else {\n      this.setState({ botao: \"Cadastrar\" })\n      this.setState({ visible: true })\n    }\n\n\n\n  }\n\n\n\n\n\n  CloseModal() {\n    this.setState({ 'visible': false })\n    this.props.callbackModal({ 'editar': false })\n    this.props.callbackModal({ 'novo': false })\n  }\n\n\n  setVisible() {\n    this.setState({ visible: false })\n  }\n  handlechangeCPF(e) {\n    this.setState({ cpf: formatToCPF(e.target.value) })\n  }\n  convertData(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [day, mnth, date.getFullYear()].join(\"/\");\n  }\n  cadastrar() {\n\n\n    let dados_cadastro = {\n      'id': this.state.id,\n      'nome': this.state.nome,\n      'cpf': this.state.cpf,\n      'rg': this.state.rg,\n      'tp_acesso': this.state.tp_acesso,\n      'status': this.state.status,\n      'email': this.state.email,\n      'telefone': this.state.telefone,\n      'obs': this.state.observacao,\n      'funcao': this.state.funcao,\n      'ctps': this.state.ctps,\n      'reservista': this.state.reservista,\n      'titulo': this.state.titulo,\n      'dt_nascimento': moment(this.state.dt_nascimento).format(dateFormat),\n      'dt_admissao': moment(this.state.dt_admissao).format(dateFormat),\n      'dt_desligamento': moment(this.state.dt_desligamento).format(dateFormat),\n      'genero': this.state.genero,\n      'cep': this.state.cep,\n      'cod_cidade': this.state.cod_cidade,\n      'estado': this.state.uf,\n      'rua': this.state.rua,\n      'bairro': this.state.rua,\n      'complemento': this.state.complemento,\n      'banco': this.state.banco,\n      'agencia': this.state.agencia,\n      'conta': this.state.conta,\n      'tp_conta': this.state.tp_conta\n    }\n\n\n    fetch('/api/cadastra_funcionario', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cadastro_funcionario': dados_cadastro,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n\n        if ('id_funcionario' in json) {\n          this.setState({ 'cod_funcionario': json.id_funcionario })\n          alert(\"FuncionÃ¡rio cadastrado com sucesso! \\n * Para criar a senha de acesso click gerar senha na tela de cadastro\")\n        } if ('msg' in json) {\n          alert(json.msg)\n        }\n\n        else {\n          alert(json)\n        }\n\n\n\n      })\n  }\n\n  GeraSenha() {\n\n    fetch('/api/cria_senha', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cria_senha': this.state.id,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n\n        if ('resultado' in json) {\n          this.setState({ 'id': json.resultado.id_funcionario })\n          alert(json.resultado)\n        } else {\n          alert(json)\n        }\n\n\n\n      })\n\n  }\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Modal\n          width={700}\n          title=\"Cadastro de FuncionÃ¡rios\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={(e) => this.CloseModal()}>\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={this.cadastrar}>\n              {this.state.botao}\n            </Button>,\n          ]}\n        >\n          <Tabs onChange={console.log()} type=\"card\">\n            <TabPane tab=\"Dados do FuncionÃ¡rio\" key=\"1\">\n              <table>\n                <tr>\n                  <th>\n                    <b>Nome:</b>\n                    <Input\n                      placeholder=\"Nome\"\n                      defaultValue={this.state.nome}\n                      onChange={(e) => { this.setState({ \"nome\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    <b>FunÃ§Ã£o:</b>\n                    <Input\n                      placeholder=\"FunÃ§Ã£o\"\n                      defaultValue={this.state.funcao}\n                      onChange={(e) => { this.setState({ \"funcao\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>E-mail:</b>\n                    <Input\n                      placeholder=\"E-mail\"\n                      defaultValue={this.state.email}\n                      onChange={(e) => { this.setState({ \"email\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    <b>Telefone:</b>\n                    <Input\n                      placeholder=\"Telefone\"\n                      defaultValue={this.state.telefone}\n                      onChange={e => this.setState({ telefone: formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    PermissÃ£o:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.tp_acesso }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'tp_acesso': e.value }) }}\n                    >\n                      {/* <Option value=\"1\">Total</Option>\n    <Option value=\"2\">Comercial</Option>\n    <Option value=\"3\">Cadastro e RelatÃ³rios</Option> */}\n\n\n                      {this.state.lista_tp_acessos.map(x => <Option value={x.value}>{x.label}</Option>)}\n\n                    </Select>\n                  </th>\n                  {this.state.id !== \"\" &&\n\n                    <th>\n                      <br />\n\n                      <Button key=\"back\" onClick={() => { this.GeraSenha() }}>\n                        Gerar Senha\n                      </Button>\n                    </th>}\n                </tr>\n                <br />\n                <b>ObservaÃ§Ã£o:</b>\n                <tr>\n                  <th colspan=\"2\">\n                    <TextArea\n                      rows={4}\n                      defaultValue={this.state.observacao}\n                      onChange={(e) => { this.setState({ \"observacao\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n            <TabPane tab=\"EndereÃ§o\" key=\"2\">\n\n              <AbaEndereco dados={this.state.aba_endereco} callbackFunction={(e) => this.setState(e)} />\n\n            </TabPane>\n            <TabPane tab=\"Documentos\" key=\"3\">\n              <table>\n                <tr>\n                  <th>\n                    RG:\n                    <Input\n                      placeholder=\"RG\"\n                      defaultValue={this.state.rg}\n                      onChange={(e) => { this.setState({ \"rg\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    CPF:\n                    <Input\n                      placeholder=\"CPF\"\n                      maxLength='14'\n                      defaultValue={this.state.cpf}\n                      onChange={(e) => { this.setState({ \"cpf\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    CTPS:\n                    <Input\n                      placeholder=\"CTPS\"\n                      defaultValue={this.state.ctps}\n                      onChange={(e) => { this.setState({ \"ctps\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    Reservista:\n                    <Input\n                      placeholder=\"Reservista\"\n                      defaultValue={this.state.reservista}\n                      onChange={(e) => { this.setState({ \"reservista\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Titulo de Eleitor:\n                    <Input\n                      placeholder=\"Titulo de Eleitor\"\n                      defaultValue={this.state.titulo}\n                      onChange={(e) => { this.setState({ \"titulo\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n\n                  <th>\n                    Data de Nascimento:<br />\n                    <DatePicker  defaultValue={moment(this.state.dt_nascimento, dateFormat)} format={dateFormat} \n                    onChange={(e) => { (e != null) ?this.setState({ \"dt_nascimento\": moment(e) }) :this.setState({ \"dt_nascimento\": \"\" })}} />\n                  </th>\n\n                  <th>\n                    Data AdmissÃ£o:<br />\n                    <DatePicker  defaultValue={moment(this.state.dt_admissao, dateFormat)} format={dateFormat} \n                    onChange={(e) => { (e != null) ?this.setState({ \"dt_admissao\": moment(e) }) :this.setState({ \"dt_admissao\": \"\" })}} />\n                  </th>\n                  <th>\n                    Data Desligamento:<br />\n                    <DatePicker defaultValue={moment(this.state.dt_desligamento, dateFormat)} format={dateFormat} \n                    onChange={(e) => { (e != null) ?this.setState({ \"dt_desligamento\": moment(e) }) :this.setState({ \"dt_desligamento\": \"\" })}} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Status:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.status }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'status': e }) }}\n                    >\n                      {this.state.lista_status.map(x => <Option value={x.value}>{x.label}</Option>)}\n                    </Select>\n                  </th>\n\n                  <th>\n                    Genero:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.genero }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'genero': e.value }) }}\n                    >\n                      {this.state.lista_genero.map(x => <Option value={x.value}>{x.label}</Option>)}\n\n\n                    </Select>\n                  </th>\n\n\n                </tr>\n\n\n              </table>\n\n            </TabPane>\n\n            <TabPane tab=\"Dados Bancarios\" key=\"4\">\n              <table>\n                <tr>\n                  <th>\n                    Banco:\n                    <Input\n                      placeholder=\"Banco\"\n                      defaultValue={this.state.banco}\n                      onChange={(e) => { this.setState({ \"banco\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    AgÃªncia:\n                    <Input\n                      placeholder=\"AgÃªncia\"\n                      defaultValue={this.state.agencia}\n                      onChange={(e) => { this.setState({ \"agencia\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Conta:\n                    <Input\n                      placeholder=\"Conta\"\n                      defaultValue={this.state.conta}\n                      onChange={(e) => { this.setState({ \"conta\": e.target.value }) }}\n                    />\n                  </th>\n                  <th>\n                    Tipo Conta:\n                    <Input\n                      placeholder=\"Tipo Conta\"\n                      defaultValue={this.state.tp_conta}\n                      onChange={(e) => { this.setState({ \"tp_conta\": e.target.value }) }}\n                    />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n\n\n            {/* <TabPane tab=\"HistÃ³rico\" key=\"5\">\n\n                <HistFunc/>\n\n              </TabPane> */}\n\n          </Tabs>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default CadFuncionario;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Veiculos.js",["168","169","170","171","172","173","174","175","176"],"\nimport React, { Component, Image, PropTypes } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport moment from 'moment';\nimport AbaEndereco from '../molecule/AbaEndereco'\n\nconst dateFormat = 'DD/MM/YYYY';\nconst monthFormat = 'YYYY/MM';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n\n\nclass CadVeiculos extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        visible: false,\n        select_permission: undefined,\n        dt_cadastro: new Date(),\n\n\n        id: '',\n        rz_social: '',\n        fantasia: '',\n        cnpj:'', \n        agencia_select:0, \n        tp_pessoa:'', \n        tp_veiculo:'',\n        email :'',\n        classificacao:'', \n        telefone:'',\n        obs:'', \n        whatsapp:'', \n        contato:'', \n        cep:'', \n        rua:'', \n        bairro:'', \n        uf:'',\n        cod_cidade:'', \n        estado:'',\n        complemento:'', \n        banco:'', \n        agencia:'', \n        conta:'', \n        tp_conta:'', \n        historico:'', \n        insc_est:'', \n        cod_cont:'', \n        nome_red:'', \n        cidade_red:'', \n        ativo_tabela_preco:'', \n        preco_15:'', \n        preco_30:'', \n        preco_60:'',\n\n        aba_endereco:\"\",\n\n    }\n    this.convertData = this.convertData.bind(this)\n    this.callbackFunction = this.callbackFunction.bind(this)\n    this.cadastrar = this.cadastrar.bind(this)\n  }\n  cadastrar(){\n\n    \n    let dados_cadastro = {\n      id: this.state.id,\n      rz_social: this.state.rz_social,\n      fantasia: this.state.fantasia,\n      cnpj:this.state.cnpj, \n      agencia_select:this.state.agencia_select, \n      tp_pessoa:this.state.tp_pessoa, \n      tp_veiculo:this.state.tp_veiculo,\n      email :this.state.email,\n      classificacao:this.state.classificacao, \n      telefone:this.state.telefone,\n      observacao:this.state.obs, \n      whatsapp:this.state.whatsapp, \n      contato:this.state.contato, \n      cep:this.state.cep, \n      rua:this.state.rua, \n      bairro:this.state.bairro, \n      cod_cidade:this.state.cod_cidade, \n      estado:this.state.uf,\n      complemento:this.state.complemento, \n      banco:this.state.banco, \n      agencia:this.state.agencia, \n      conta:this.state.conta, \n      tp_conta:this.state.tp_conta, \n      historico:this.state.historico, \n      insc_est:this.state.insc_est, \n      cod_cont:this.state.cod_cont, \n      nome_red:this.state.nome_red, \n      cidade_red:this.state.cidade_red, \n      ativo_tabela_preco:this.state.ativo_tabela_preco, \n      preco_15:this.state.preco_15, \n      preco_30:this.state.preco_30, \n      preco_60:this.state.preco_60,\n      \n    }\n  \nconsole.log(\"Dados de cadastro: \", dados_cadastro)  \n    fetch('/api/cadastra_veiculo', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cadastro_veiculo': dados_cadastro,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n  \n  if('id_agencia' in json){\n    this.setState({'cod_funcionario':json.id_funcionario})\n    alert(\"FuncionÃ¡rio cadastrado com sucesso!\")\n    this.props.callbackModal({'novo':false})\n  }if('msg' in json){\n    alert(json.msg)\n    \n    \n    // this.setState({visible:false})\n    this.props.callbackModal({'editar':false})\n    \n    \n  }\n  \n  else{\n    alert(json)\n  }\n        \n  \n  \n      })\n  }\n\n\n  convertData(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [day, mnth, date.getFullYear()].join(\"/\");\n  }\n\n  callbackFunction(e) {\n\n    this.setState(e)\n    console.log('Funcionou', this.state)\n  }\n\n  CloseModal(){\n\n    this.setState({\n      visible: false,\n    });\n  } \n\n\n\n  componentDidMount(){\n  \n    if (this.props.veiculo !== undefined){\n  console.log(\"cod_veiculo: que chegou\", this.props.veiculo)\n  fetch('/api/carregadadosveiculo', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'consulta_veiculo':this.props.veiculo\n    })\n  })\n    .then((r) => r.json())\n    .then((json) => {\n  \n  \n  if('resultado' in json){\n  console.log(json.resultado, \"Resultado Recebido-------------\")\n  \n  this.setState({id: json.resultado.id})\n  this.setState({rz_social: json.resultado.rz_social})\n  this.setState({fantasia: json.resultado.fantasia})\n  this.setState({email: json.resultado.email})\n  this.setState({telefone: json.resultado.telefone})\n  this.setState({whatsapp: json.resultado.whatsapp})\n  \n  this.setState({tp_pessoa: json.resultado.tp_pessoa})\n  this.setState({tp_veiculo: json.resultado.tp_veiculo})\n  this.setState({obs: json.resultado.obs})\n  this.setState({cep: json.resultado.cep})\n  this.setState({tp_veiculo: json.resultado.tp_veiculo})\n  \n  this.setState({contato: json.resultado.contato})\n  this.setState({nome_red: json.resultado.nome_red})\n  this.setState({cargo: json.resultado.cargo})\n  this.setState({clientes: json.resultado.clientes})\n  this.setState({cidade_red: json.resultado.cidade_red})\n  this.setState({uf: json.resultado.estado})\n  \n  this.setState({insc_est: json.resultado.insc_est})\n  this.setState({cnpj: json.resultado.cnpj})\n  this.setState({cod_cont: json.resultado.cod_cont})\n\n  this.setState({rua: json.resultado.rua})\n  this.setState({bairro: json.resultado.bairro})\n  this.setState({cod_cidade: json.resultado.cod_cidade})\n  \n  this.setState({complemento: json.resultado.complemento})\n\n  this.setState({ativo_tabela_preco: json.resultado.ativo_tabela_preco})\n\n  this.setState({dt_cadastro: json.resultado.dt_create})\n\n  this.setState({preco_15: json.resultado.preco_15})\n  this.setState({preco_30: json.resultado.preco_30})\n  this.setState({preco_60: json.resultado.preco_60})\n  \n  this.setState({obs: json.resultado.observacao})\n  \n  this.setState({agencia: json.resultado.agencia})\n  this.setState({conta: json.resultado.conta})\n  this.setState({banco: json.resultado.banco})\n  this.setState({tp_conta: json.resultado.tp_conta})\n  \n  let dados = {\n    id: json.resultado.id,\n    cep:json.resultado.cep,\n    rua:json.resultado.rua,\n    bairro:json.resultado.bairro,\n    cod_cidade: Number(json.resultado.cod_cidade),\n    uf:json.resultado.estado,\n    complemento:json.resultado.complemento,\n  }\n  localStorage.setItem('aba_endereco',JSON.stringify(dados))\n  this.setState({aba_endereco: dados})\n  \n  this.setState({'visible':true})\n  \n  \n  }else{\n  alert(json)\n  }\n  \n  \n    })\n  \n  }else{\n    this.setState({botao: \"Cadastrar\"})\n    this.setState({visible:true})\n  }\n  \n  \n  \n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Modal\n          width={700}\n          title=\"Cadastro de VeÃ­culos\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={(e)=>this.CloseModal()}>\n              Cancelar\n              </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={this.cadastrar}>\n              Cadastrar\n              </Button>,\n          ]}\n        >\n          <Tabs onChange={console.log()} type=\"card\">\n            <TabPane tab=\"Dados do Veiculo\" key=\"1\">\n              <table>\n                <tr>\n                  <th>\n                    Tipo Pessoa:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.tp_pessoa }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'tp_pessoa': e.value }) }}\n                    >\n                      <Option value=\"1\">JurÃ­dica</Option>\n                      <Option value=\"2\">FÃ­sica</Option>\n                    </Select>\n                  </th>\n                  <th>\n\n                    Data de Cadastro:<br />\n                    <DatePicker format={dateFormatList}\n                      disabled\n                      defaultValue={moment(this.state.dt_cadastro, dateFormat)} format={dateFormat}\n                    />\n\n                  </th>\n                  <th>\n                    Tipo de VeÃ­culo:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.tp_pessoa }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'tp_pessoa': e.value }) }}\n                    >\n                      <Option value=\"1\">RÃ¡dio</Option>\n                      <Option value=\"2\">Jornal</Option>\n                      <Option value=\"3\">Outros</Option>\n                    </Select>\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    <b>RazÃ£o Social:</b>\n                    <Input \n                    defaultValue={this.state.rz_social}\n                    onChange={(e)=>{this.setState({\"rz_social\":e.target.value})}}\n                    placeholder=\"RazÃ£o Social\" />\n                  </th>\n                  <th>\n                    <b>Fantasia:</b>\n                    <Input \n                    defaultValue={this.state.fantasia}\n                    onChange={(e)=>{this.setState({\"fantasia\":e.target.value})}}\n                    placeholder=\"Fantasia\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>E-mail:</b>\n                    <Input \n                    defaultValue={this.state.email}\n                    onChange={(e)=>{this.setState({\"email\":e.target.value})}}\n                    placeholder=\"E-mail\" />\n                  </th>\n                  <th>\n                    <b>Telefone:</b>\n                    <Input\n                      placeholder=\"Telefone\"\n                      defaultValue = {this.state.telefone}\n                      onChange={e => this.setState({ telefone: formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Whatsapp</b>\n                    <Input\n                      placeholder=\"Whatsapp\"\n                      defaultValue={this.state.whatsapp}\n                      onChange={e => this.setState({ whatsapp: formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Contato:</b>\n                    <Input \n                    defaultValue={this.state.contato}\n                    onChange={(e)=>{this.setState({\"contato\":e.target.value})}}\n                    placeholder=\"Contato\" />\n                  </th>\n                  <th>\n                    <b>Nome Red.:</b>\n                    <Input \n                    defaultValue={this.state.nome_red}\n                    onChange={(e)=>{this.setState({\"nome_red\":e.target.value})}}\n                    placeholder=\"Nome Red.\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Cidade Red.:</b>\n                    \n                    <Input placeholder=\"Cidade Red.\"\n                    defaultValue={this.state.cidade_red}\n                    onChange={(e)=>{this.setState({\"cidade_red\":e.target.value})}}\n                     />\n                  </th>\n                </tr>\n                <b>ObservaÃ§Ã£o:</b>\n                <tr>\n                  <th colspan=\"2\">\n                    <TextArea \n                    defaultValue={this.state.obs}\n                    onChange={(e)=>{this.setState({\"obs\":e.target.value})}}\n                    rows={4} />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n            <TabPane tab=\"Tabela de PreÃ§os\" key=\"2\">\n              <table>\n                <tr>\n                  <th>\n                    Ativo na Tabela:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.ativo_tabela_preco }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'ativo_tabela_preco': e.value }) }}\n                    >\n                      <Option value=\"0\">Sim</Option>\n                      <Option value=\"1\">NÃ£o</Option>\n\n                    </Select>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    15\" <Input \n                      defaultValue={this.state.preco_15}\n                      onChange={(e)=>{this.setState({\"preco_15\":e.target.value})}}\n                    placeholder='15\"' />\n                  </th>\n                  <th>\n                    30\" <Input \n                      defaultValue={this.state.preco_30}\n                      onChange={(e)=>{this.setState({\"preco_30\":e.target.value})}}\n                    placeholder='30\"' />\n                  </th>\n                  <th>\n                    60\" <Input \n                      defaultValue={this.state.preco_60}\n                      onChange={(e)=>{this.setState({\"preco_60\":e.target.value})}}\n                    placeholder='60\"' />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n\n            <TabPane tab=\"EndereÃ§o\" key=\"3\">\n\n              <AbaEndereco dados={this.state.aba_endereco} callbackFunction={(e) => this.setState(e)} />\n\n            </TabPane>\n\n            <TabPane tab=\"Documentos\" key=\"4\">\n              <table>\n                <tr>\n                  <th>\n                    Inscr. Est.:\n                      <Input \n                      defaultValue={this.state.insc_est}\n                      onChange={(e)=>{this.setState({\"insc_est\":e.target.value})}}\n                      placeholder=\"Inscr. Est.\" />\n                  </th>\n                  <th>\n                    CNPJ:\n                    <Input \n                    defaultValue={this.state.cnpj}\n                    onChange={(e)=>{this.setState({\"cnpj\":e.target.value})}}\n                    placeholder=\"CNPJ\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Cod. Contab.:\n                    <Input \n                     defaultValue={this.state.cod_cont}\n                     onChange={(e)=>{this.setState({\"cod_cont\":e.target.value})}}\n                    placeholder=\"Cod. Contab.\" />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n\n            <TabPane tab=\"Dados Bancarios\" key=\"5\">\n\n              <table>\n                <tr>\n                  <th>\n                    Banco:\n                    <Input \n                    defaultValue={this.state.banco}\n                    onChange={(e)=>{this.setState({\"banco\":e.target.value})}}\n                    placeholder=\"Banco\" />\n                  </th>\n                  <th>\n                    AgÃªncia:\n                      <Input \n                     defaultValue={this.state.agencia}\n                     onChange={(e)=>{this.setState({\"agencia\":e.target.value})}}\n                      placeholder=\"AgÃªncia\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Conta:\n                    <Input \n                    defaultValue={this.state.conta}\n                    onChange={(e)=>{this.setState({\"conta\":e.target.value})}}\n                    placeholder=\"Conta\" />\n                  </th>\n                  <th>\n                    Tipo Conta:\n                      <Input \n                      defaultValue={this.state.tp_conta}\n                      onChange={(e)=>{this.setState({\"tp_conta\":e.target.value})}}\n                      placeholder=\"Tipo Conta\" />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n          </Tabs>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CadVeiculos;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/molecule/AbaEndereco.js",["177","178","179","180","181","182","183","184","185","186","187","188"],"import React, { Component, Image, PropTypes } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\n\nconst { Option } = Select;\n\n\nclass AbaEndereco extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: true,\n      select_permission: undefined,\n\n      cep: JSON.parse(localStorage.getItem('aba_endereco')).cep,\n      rua: JSON.parse(localStorage.getItem('aba_endereco')).rua,\n      bairro: JSON.parse(localStorage.getItem('aba_endereco')).bairro,\n      cod_cidade: JSON.parse(localStorage.getItem('aba_endereco')).cod_cidade,\n      uf: JSON.parse(localStorage.getItem('aba_endereco')).uf,\n      complemento: JSON.parse(localStorage.getItem('aba_endereco')).complemento,\n\n      lista_estados: [{ value: 1, label: 'Acre' },\n      { value: 2, label: 'Alagoas' },\n      { value: 3, label: 'Amazonas' },\n      { value: 4, label: 'AmapÃ¡' },\n      { value: 5, label: 'Bahia' },\n      { value: 6, label: 'CearÃ¡' },\n      { value: 7, label: 'Distrito Federal' },\n      { value: 8, label: 'EspÃ­rito Santo' },\n      { value: 9, label: 'GoiÃ¡s' },\n      { value: 10, label: 'MaranhÃ£o' },\n      { value: 11, label: 'Minas Gerais' },\n      { value: 12, label: 'Mato Grosso do Sul' },\n      { value: 13, label: 'Mato Grosso' },\n      { value: 14, label: 'ParÃ¡' },\n      { value: 15, label: 'ParaÃ­ba' },\n      { value: 16, label: 'Pernambuco' },\n      { value: 17, label: 'PiauÃ­' },\n      { value: 18, label: 'ParanÃ¡' },\n      { value: 19, label: 'Rio de Janeiro' },\n      { value: 20, label: 'Rio Grande do Norte' },\n      { value: 21, label: 'RondÃ´nia' },\n      { value: 22, label: 'Roraima' },\n      { value: 23, label: 'Rio Grande do Sul' },\n      { value: 24, label: 'Santa Catarina' },\n      { value: 25, label: 'Sergipe' },\n      { value: 26, label: 'SÃ£o Paulo' },\n      { value: 27, label: 'Tocantins' }],\n      default_uf: 23,\n      lista_cidades: []\n\n    }\n    this.Altera = this.Altera.bind(this)\n    this.onSearch = this.onSearch.bind(this)\n  }\n\n  Altera(e) {\n    this.setState(e)\n    this.props.callbackFunction(e);\n\n    if ('uf' in e) {\n      fetch('/api/consultacidades', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta': { 'estado': e.uf }\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({ cod_cidade: null })\n          this.props.callbackFunction({ cod_cidade: null });\n          this.setState({ lista_cidades: json.cidades })\n\n        })\n\n\n    }\n\n  }\n\n  componentDidMount() {\n    if (JSON.parse(localStorage.getItem('aba_endereco')).id_funcionario == null) {\n      fetch('/api/consultacidades', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta': { 'estado': this.state.default_uf }\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({ uf: this.state.default_uf })\n          this.setState({ lista_cidades: json.cidades })\n          // this.setState({visible:true})\n\n        })\n    } else {\n      fetch('/api/consultacidades', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta': { 'estado': JSON.parse(localStorage.getItem('aba_endereco')).uf }\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n\n\n          this.setState({ lista_cidades: json.cidades })\n          // this.setState({visible:true})\n\n        })\n    }\n\n  }\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  BuscaCidades() {\n\n\n  }\n\n  render() {\n    return (\n      <div>\n\n        <table>\n          <tr>\n            <th>\n              <b>CEP:</b>\n              <Input\n                placeholder=\"CEP\"\n                defaultValue={this.state.cep}\n                onChange={(e) => { this.Altera({ 'cep': e.target.value }) }}\n              />\n            </th>\n          </tr>\n        </table>\n\n        <table>\n          <tr>\n            <td colspan=\"3\">\n              <b>Rua:</b>\n              <Input placeholder=\"Rua\"\n                defaultValue={this.state.rua}\n                onChange={(e) => { this.Altera({ 'rua': e.target.value }) }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <th>\n              <b>Bairro:</b>\n              <Input\n                placeholder=\"Bairro\"\n                defaultValue={this.state.bairro}\n                onChange={(e) => { this.Altera({ \"bairro\": e.target.value }) }}\n              />\n            </th>\n            <th>\n              Cidade:<br />\n              <Select\n\n                labelInValue\n                defaultValue={{ value: this.state.cod_cidade }}\n                style={{ width: 190 }}\n                onChange={(e) => { this.Altera({ 'cod_cidade': e.value }) }}\n              >\n                {this.state.lista_cidades.map(x => <Option value={x.value}>{x.label}</Option>)}\n              </Select>\n            </th>\n            <th>\n              UF:<br />\n              <Select\n                labelInValue\n                defaultValue={{ value: this.state.uf }}\n                style={{ width: 190 }}\n                onChange={(e) => { this.Altera({ 'uf': e.value }) }}\n              >\n                {this.state.lista_estados.map(x => <Option value={x.value}>{x.label}</Option>)}\n              </Select>\n            </th>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <b>Complemento:</b><br />\n              <Input\n                placeholder=\"Complemento\"\n                defaultValue={this.state.complemento}\n                onChange={(e) => { this.Altera({ 'complemento': e.target.value }) }}\n              />\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default AbaEndereco;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Agencia.js",["189","190","191","192","193","194","195","196","197","198"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport moment from 'moment';\nimport AbaEndereco from '../molecule/AbaEndereco'\nimport AbaContato from '../molecule/Contato'\n\nconst dateFormat = 'DD/MM/YYYY';\nconst monthFormat = 'YYYY/MM';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass CadastroAgencia extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      select_permission: undefined,\n      dt_cadastro: new Date(),\n\n      id: \"\",\n      nome: \"\",\n      cnpj: \"\",\n      tp_pessoa: \"1\",\n      status: 1,\n      email: \"\",\n      telefone: \"\",\n      fax: \"\",\n      contato: \"\",\n      fantasia: \"\",\n      nome_red: \"\",\n      cidade_red: \"\",\n      cargo: \"\",\n      clientes: \"\",\n      obs: \"\",\n      insc_est: \"\",\n      cod_cont: \"\",\n      cep: \"\",\n      cod_cidade: \"\",\n      uf: \"\",\n      rua: \"\",\n      bairro: \"\",\n      complemento: \"\",\n\n    }\n    this.convertData = this.convertData.bind(this)\n    this.cadastrar = this.cadastrar.bind(this)\n  }\n\n  cadastrar() {\n\n\n    let dados_cadastro = {\n      'id': this.state.id,\n      'nome': this.state.nome,\n      'cnpj': this.state.cnpj,\n      'tp_pessoa': this.state.tp_pessoa,\n      'status': this.state.status,\n      'email': this.state.email,\n      'telefone': this.state.telefone,\n      'fax': this.state.fax,\n      'contato': this.state.contato,\n      'fantasia': this.state.fantasia,\n      'obs': this.state.obs,\n      'nome_red': this.state.nome_red,\n      'cidade_red': this.state.cidade_red,\n      'cargo': this.state.cargo,\n      'clientes': this.state.clientes,\n      'obs': this.state.obs,\n      'insc_est': this.state.insc_est,\n      'cod_cont': this.state.cod_cont,\n      'cep': this.state.cep,\n      'cod_cidade': this.state.cod_cidade,\n      'estado': this.state.estado,\n      'rua': this.state.rua,\n      'bairro': this.state.rua,\n      'complemento': this.state.complemento,\n      'estado': this.state.uf\n\n\n    }\n\n    console.log(\"Dados de cadastro: \", dados_cadastro)\n    fetch('/api/cadastra_agencia', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cadastro_agencia': dados_cadastro,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n\n        if ('id_agencia' in json) {\n          this.setState({ 'cod_funcionario': json.id_funcionario })\n          alert(\"FuncionÃ¡rio cadastrado com sucesso!\")\n          this.props.callbackModal({ 'novo': false })\n        } if ('msg' in json) {\n          alert(json.msg)\n\n\n          // this.setState({visible:false})\n          this.props.callbackModal({ 'editar': false })\n\n\n        }\n\n        else {\n          alert(json)\n        }\n\n\n\n      })\n  }\n\n\n  convertData(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [day, mnth, date.getFullYear()].join(\"/\");\n  }\n\n  CloseModal() {\n\n    this.setState({\n      visible: false,\n    });\n  }\n\n\n  componentDidMount() {\n\n    if (this.props.agencia !== undefined) {\n      console.log(\"cod_agencia: que chegou\", this.props.agencia)\n      fetch('/api/carregadadosagencia', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_agencia': this.props.agencia\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n\n\n          if ('resultado' in json) {\n            console.log(json.resultado, \"Resultado Recebido-------------\")\n\n            this.setState({ id: json.resultado.id })\n            this.setState({ nome: json.resultado.nome })\n            this.setState({ email: json.resultado.email })\n            this.setState({ telefone: json.resultado.telefone })\n            this.setState({ fax: json.resultado.fax })\n            this.setState({ tp_pessoa: json.resultado.tp_pessoa.toString() })\n            this.setState({ obs: json.resultado.obs })\n            this.setState({ cep: json.resultado.cep })\n            this.setState({ fantasia: json.resultado.fantasia })\n            this.setState({ contato: json.resultado.contato })\n            this.setState({ nome_red: json.resultado.nome_red })\n            this.setState({ cargo: json.resultado.cargo })\n            this.setState({ clientes: json.resultado.clientes })\n            this.setState({ cidade_red: json.resultado.cidade_red })\n            this.setState({ uf: json.resultado.estado })\n\n            this.setState({ insc_est: json.resultado.insc_est })\n            this.setState({ cnpj: json.resultado.cnpj })\n            this.setState({ cod_cont: json.resultado.cod_cont })\n\n            this.setState({ rua: json.resultado.rua })\n            this.setState({ bairro: json.resultado.bairro })\n            this.setState({ cod_cidade: json.resultado.cod_cidade })\n            this.setState({ uf: json.resultado.estado })\n            this.setState({ complemento: json.resultado.complemento })\n\n            this.setState({ status: json.resultado.status })\n\n            this.setState({ dt_cadastro: json.resultado.dt_create })\n\n\n\n\n            let dados = {\n              id_funcionario: json.resultado.id,\n              cep: json.resultado.cep,\n              rua: json.resultado.rua,\n              bairro: json.resultado.bairro,\n              cod_cidade: Number(json.resultado.cod_cidade),\n              uf: json.resultado.estado,\n              complemento: json.resultado.complemento,\n            }\n            localStorage.setItem('aba_endereco', JSON.stringify(dados))\n            this.setState({ aba_endereco: dados })\n\n            this.setState({ 'visible': true })\n\n\n          } else {\n            alert(json)\n          }\n\n\n        })\n\n    } else {\n      this.setState({ botao: \"Cadastrar\" })\n      this.setState({ visible: true })\n    }\n\n\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Modal\n          width={600}\n          title=\"Cadastro de AgÃªncias\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={(e) => this.CloseModal()}>\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={this.cadastrar}>\n              Cadastrar\n            </Button>,\n          ]}\n        >\n          <Tabs onChange={console.log()} type=\"card\">\n            <TabPane tab=\"Dados do AgÃªncia\" key=\"1\">\n              <table>\n                <tr>\n                  <th>\n                    Data de Cadastro:<br />\n                    <DatePicker format={dateFormatList}\n                      disabled\n                      defaultValue={moment(this.state.dt_cadastro, dateFormat)} format={dateFormat}\n                    />\n                  </th>\n                  <th>\n                    Tipo Pessoa:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: this.state.tp_pessoa }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'tp_pessoa': e.value }) }}\n                    >\n                      <Option value=\"1\">JurÃ­dica</Option>\n                      <Option value=\"2\">FÃ­sica</Option>\n                    </Select>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Nome:</b>\n                    <Input\n                      defaultValue={this.state.nome}\n                      onChange={(e) => { this.setState({ \"nome\": e.target.value }) }}\n                      placeholder=\"Nome\" />\n                  </th>\n                  <th>\n                    <b>Fantasia:</b>\n                    <Input\n                      defaultValue={this.state.fantasia}\n                      onChange={(e) => { this.setState({ \"fantasia\": e.target.value }) }}\n                      placeholder=\"Fantasia\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>E-mail:</b>\n                    <Input\n                      defaultValue={this.state.email}\n                      onChange={(e) => { this.setState({ \"email\": e.target.value }) }}\n                      placeholder=\"E-mail\" />\n                  </th>\n                  <th>\n                    <b>Telefone:</b>\n                    <Input\n                      placeholder=\"Telefone\"\n                      defaultValue={this.state.telefone}\n                      onChange={e => this.setState({ telefone: formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Fax</b>\n                    <Input\n                      placeholder=\"Fax\"\n                      defaultValue={this.state.fax}\n                      onChange={e => this.setState({ fax: formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Contato:</b>\n                    <Input\n                      defaultValue={this.state.contato}\n                      onChange={(e) => { this.setState({ \"contato\": e.target.value }) }}\n                      placeholder=\"Contato\" />\n                  </th>\n                  <th>\n                    <b>Nome Red.:</b>\n                    <Input\n                      defaultValue={this.state.nome_red}\n                      onChange={(e) => { this.setState({ \"nome_red\": e.target.value }) }}\n                      placeholder=\"Nome Red.\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Cidade Red.:</b>\n                    <Input\n                      defaultValue={this.state.cidade_red}\n                      onChange={(e) => { this.setState({ \"cidade_red\": e.target.value }) }}\n                      placeholder=\"Cidade Red.\" />\n                  </th>\n                  <th>\n                    <b>Cargo:</b>\n                    <Input\n                      defaultValue={this.state.cargo}\n                      onChange={(e) => { this.setState({ \"cargo\": e.target.value }) }}\n                      placeholder=\"Cargo\" />\n                  </th>\n                </tr>\n\n                <tr>\n                  <th colSpan=\"2\">\n                    <b>Clientes:</b>\n                    <Input\n                      defaultValue={this.state.clientes}\n                      onChange={(e) => { this.setState({ \"clientes\": e.target.value }) }}\n                      placeholder=\"Contato\" />\n                  </th>\n                </tr>\n\n                <b>ObservaÃ§Ã£o:</b>\n                <tr>\n                  <th colspan=\"2\">\n                    <TextArea\n                      defaultValue={this.state.obs}\n                      onChange={(e) => { this.setState({ \"obs\": e.target.value }) }}\n                      rows={4} />\n                  </th>\n                </tr>\n\n\n              </table>\n            </TabPane>\n            <TabPane tab=\"Documentos\" key=\"4\">\n              <table>\n                <tr>\n                  <th>\n                    Inscr. Est.:\n                    <Input\n                      defaultValue={this.state.insc_est}\n                      onChange={(e) => { this.setState({ \"insc_est\": e.target.value }) }}\n                      placeholder=\"Inscr. Est.\" />\n                  </th>\n                  <th>\n                    CNPJ:\n                    <Input\n                      defaultValue={this.state.cnpj}\n                      onChange={(e) => { this.setState({ \"cnpj\": e.target.value }) }}\n                      placeholder=\"CNPJ\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Cod. Contab.:\n                    <Input\n                      defaultValue={this.state.cod_cont}\n                      onChange={(e) => { this.setState({ \"cod_cont\": e.target.value }) }}\n                      placeholder=\"Cod. Contab.\" />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n            <TabPane tab=\"EndereÃ§o\" key=\"3\">\n              {/* <AbaEndereco callbackFunction={(e)=>this.setState(e)}/> */}\n              <AbaEndereco dados={this.state.aba_endereco} callbackFunction={(e) => this.setState(e)} />\n\n            </TabPane>\n\n            <TabPane tab=\"Contato\" Key='4'>\n              <AbaContato />\n            </TabPane>\n\n\n\n          </Tabs>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CadastroAgencia;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Router.js",[],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaFuncionario.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport CadFuncionario from './Cadastro_Funcionario'\nimport { getKeyThenIncreaseKey } from 'antd/lib/message';\n\n\n\nconst data =  [\n  {\n    key: 1, \n    cpf: \"32268484882\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 3, \n    cpf: \"23432432\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 4, \n    cpf: \"3243243\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 5, \n    cpf: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 6, \n    cpf: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 7, \n    cpf: \"teste\", \n    nome: \"rogerio\"\n  }, \n  {\n    key: 8, \n    cpf: \"teste\", \n    nome: \"rogerio\"\n  }\n]\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { Option } = Select;\n\nconst columns = [\n\n    {\n      title: 'Nome',\n      dataIndex: 'nome',\n\n    },\n    {\n      title: 'CPF',\n      dataIndex: 'cpf',\n\n    },\n  \n  ];\n  \nclass PesquisaFuncionario extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        cadastrar_tabela: false,\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        editar: false,\n        novo: false,\n        cod_func: \"\",\n        nome:\"\",\n        data:[]\n        \n         }\nthis.Update = this.Update.bind(this)\nthis.start = this.start.bind(this)\nthis.onSelectChange = this.onSelectChange.bind(this)\nthis.convertData = this.convertData.bind(this)\nthis.novo = this.novo.bind(this)\nthis.editar = this.editar.bind(this)\n// this.Consulta = this.Consulta.bind(this)\n\n    }\n    Update(e){\n        this.setState(e)\n    }\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n    \n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n      novo(){\n        let dados = {\n          cep:\"\",\n          rua:\"\",\n          bairro:\"\",\n          cod_cidade:\"\",\n          uf:\"\",\n          complemento:\"\",\n        }\n        localStorage.setItem('aba_endereco',JSON.stringify(dados))\n\n          // localStorage.clear();\n          this.setState({'novo':true})\n      }\n\n\n      editar(){\n     \n        if(this.state.selectedRowKeys.length===1){\n\n        console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n        this.setState({'editar':true})\n    }else{\n        alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n    }\n\n\n\n    CloseModal(){\n        this.props.history.push('/')\n        this.setState({\n          visible: false,\n        });\n      }\n\n    Consulta(){\n      if(this.state.nome.length<3){\n        alert(\"Para efetuar a busca Ã© necessÃ¡rio digitar pelo menos 3 caracteres\")\n\n      }else{\n      fetch('/api/consulta_funcionario', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_funcionario': {'nome':this.state.nome},\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({'data':json.funcionarios})\n          // var dados = json.funcionarios.map(person => ({ key:person.id, nome: person.nome, cpf: person.cpf }));\n          // this.setState({data:dados})\n          \n          // console.log(dados)\n  \n        })\n\n      }\n\n    }\n\n    \n  \n\n    \n  \n   \n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n        return (\n          <div style={{ marginBottom: 16 }}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          {/* </div>\n            <div> */}\n            <Modal\n                           width={600}\n                           title=\"Pesquisa Funcionarios\"\n                           visible={this.state.visible}\n                           onCancel={(e)=>this.CloseModal()}\n                           footer={[\n                               <Button key=\"back\" onClick={()=>{this.CloseModal()}}>\n                                   Cancelar\n                         </Button>,                    \n                         <Button key=\"Cadastrar\" type=\"primary\" onClick={()=>{this.novo()}}>\n                                   Novo\n                         </Button>,\n                                                  <Button key=\"Pesquisar\" type=\"primary\" onClick={()=>{this.Consulta()}}>\n                                                  Pesquisar\n                                        </Button>,\n                                                                 <Button key=\"Editar\" type=\"primary\" onClick={()=>{this.editar()}}>\n                                                                 Editar\n                                                       </Button>,\n\n                               \n                           ]}\n                       >\n                       <table>\n                         <tr>\n                             <th>\n                               Nome FuncionÃ¡rio\n                               <Input \n                               placeholder=\"Nome FuncionÃ¡rio\"\n                               defaultValue={this.state.nome} \n                               onChange={(e)=>{this.setState({'nome':e.target.value})}}\n                               \n                               />\n                               \n                               \n                               \n                                                   </th>\n                               <th>\n                      \n             </th>\n                             <th>\n           \n                               </th>\n                               </tr>\n                               <tr>\n                                 <th>\n                                   \n\n                                   </th>\n                                 </tr>\n                           \n                           </table>\n                           <div>\n                          \n\n                   <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                 </div>\n                     \n           \n           \n                           \n                           </Modal>\n\n{this.state.novo===true &&\n<CadFuncionario callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n{this.state.editar===true &&\n<CadFuncionario funcionario={this.state.selectedRowKeys[0]} callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n                   </div>\n                   \n      );\n    }\n  }\n  \n  export default PesquisaFuncionario;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/molecule/Contato.js",["215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker , Table} from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\n\nconst { Option } = Select;\nconst columns = [\n    {\n      title: 'Nome',\n      dataIndex: 'nome',\n    },    \n    {\n        title: 'Cargo',\n        dataIndex: 'cargo',\n      },\n    {\n      title: 'E-mail',\n      dataIndex: 'email',\n    },\n\n  ];\n\n\nclass AbaContato extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        selectedRowKeys: [],\n        dados: [],\n        nome:\"\",\n        cargo:\"\",\n        email:\"\",\n        atualiza: false\n         \n    }\n         \n\n\n         this.incluir = this.incluir.bind(this)\n\n    }\n    excluir(){\n        let dados = this.state.data\n        this.state.selectedRowKeys.map(x=> {dados.splice(x, 1)})\n        this.setState({'data':dados})\n        this.setState({'selectedRowKeys':[]})\n    }\n    onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n        }\n\n    \n    \n        incluir(){\n    \n        if(this.state.nome.length> 0){\n        \n        let contato = {'nome': this.state.nome,\n        'email': this.state.email,\n        'cargo': this.state.cargo,\n    }\n    let d = this.state.dados\n    d.push(contato)\n    this.setState({dados:d})\n\n    this.setState({nome:\"\"})\n    this.setState({cargo:\"\"})\n    this.setState({email:\"\"})\n\n}\nelse{\n    alert(\"Escreva os dados do contato antes de clicar em inserir!\")\n}\n      \n  console.log(\"LISTA_CONTATOS\", this.state.dados)\n    }\n\n\n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n          };\n          \n      return (\n        <div>\n  <table>\n                            <tr>\n                                <th>\n                                   Nome: <br/>\n                                <Input \n              defaultValue={this.state.nome}\n              onChange={(e)=>{this.setState({\"nome\":e.target.value})}}\n              placeholder=\"Nome\" />   \n                                </th>\n                                <th>\n                                    Cargo: <br/>\n                                <Input \n              defaultValue={this.state.cargo}\n              onChange={(e)=>{this.setState({\"cargo\":e.target.value})}}\n              placeholder=\"Cargo\" />   \n                                  \n                                </th>\n                                <th>\n                                E-mail: <br/>\n                                <Input \n              defaultValue={this.state.email}\n              onChange={(e)=>{this.setState({\"email\":e.target.value})}}\n              placeholder=\"E-mail\" />   \n                                    </th>\n                            </tr>\n                            <tr/>\n                            <tr>\n                                <th><Button key=\"excluir\" onClick={this.excluir}>\n                                    Excluir\n              </Button>\n                                    <Button key=\"inserir\" onClick={this.incluir}>\n                                    Inserir\n              </Button></th>      \n                            </tr>\n                        </table>\n\n\n                        <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.dados} />\n\n       \n       {this.state.dados}\n        </div>\n      );\n    }\n  }\n\n  export default AbaContato;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Pesquisa_Tabela_Preco.js",["228","229","230","231","232","233","234","235","236"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Parceiros.js",["237","238","239","240","241","242","243","244","245"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport moment from 'moment';\nimport AbaEndereco from '../molecule/AbaEndereco'\nimport AbaContato from '../molecule/Contato'\n\nconst dateFormat = 'DD/MM/YYYY';\nconst monthFormat = 'YYYY/MM';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass CadParceiros extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      select_permission: undefined,\n      id: \"\",\n      rz_social: \"\",\n      cnpj: \"\",\n      tp_pessoa: \"1\",\n      status: 1,\n      email: \"\",\n      telefone: \"\",\n      fax: \"\",\n      whatsapp: \"\",\n      contato: \"\",\n      fantasia: \"\",\n      nome_red: \"\",\n      cidade_red: \"\",\n      cargo: \"\",\n      clientes: \"\",\n      obs: \"\",\n      insc_est: \"\",\n      cod_cont: \"\",\n      cep: \"\",\n      cod_cidade: \"\",\n      uf: \"\",\n      rua: \"\",\n      bairro: \"\",\n      complemento: \"\",\n\n      banco: \"\",\n      agencia: \"\",\n      conta: \"\",\n      tp_conta: \"\",\n      dt_cadastro: new Date()\n\n    }\n\n    this.convertData = this.convertData.bind(this)\n    this.cadastrar = this.cadastrar.bind(this)\n\n  }\n\n  cadastrar() {\n    let dados_cadastro = {\n      'id': this.state.id,\n      'rz_social': this.state.rz_social,\n      'cnpj': this.state.cnpj,\n      'tp_pessoa': this.state.tp_pessoa,\n      'status': this.state.status,\n      'email': this.state.email,\n      'telefone': this.state.telefone,\n      'fax': this.state.fax,\n      'contato': this.state.contato,\n      'fantasia': this.state.fantasia,\n      'obs': this.state.obs,\n      'nome_red': this.state.nome_red,\n      'cidade_red': this.state.cidade_red,\n      'cargo': this.state.cargo,\n      'clientes': this.state.clientes,\n      'insc_est': this.state.insc_est,\n      'cod_cont': this.state.cod_cont,\n      'cep': this.state.cep,\n      'cod_cidade': this.state.cod_cidade,\n      'estado': this.state.estado,\n      'rua': this.state.rua,\n      'bairro': this.state.rua,\n      'complemento': this.state.complemento,\n      'estado': this.state.uf,\n      'tp_acesso': 1,\n      'whatsapp': this.state.whatsapp,\n      'banco': this.state.banco,\n      'agencia': this.state.banco,\n      'conta': this.state.conta,\n      'tp_conta': this.state.tp_conta,\n    }\n\n    console.log(\"Dados de cadastro: \", dados_cadastro)\n    fetch('/api/cadastra_parceiro', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cadastro_parceiro': dados_cadastro,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n\n        if ('id_parceiro' in json) {\n          this.setState({ 'cod_parceiro': json.id_parceiro })\n          alert(\"Parceiro cadastrado com sucesso!\")\n          this.props.callbackModal({ 'novo': false })\n        } if ('msg' in json) {\n          alert(json.msg)\n\n\n          // this.setState({visible:false})\n          this.props.callbackModal({ 'editar': false })\n\n\n        }\n\n        else {\n          alert(json)\n        }\n\n\n\n      })\n  }\n\n\n  convertData(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [day, mnth, date.getFullYear()].join(\"/\");\n  }\n\n  CloseModal() {\n\n    this.setState({\n      visible: false,\n    });\n  }\n\n\n  componentDidMount() {\n\n    if (this.props.parceiro !== undefined) {\n      console.log(\"cod_parceiro: que chegou\", this.props.parceiro)\n      fetch('/api/carregadadosparceiro', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_parceiro': this.props.parceiro\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n\n\n          if ('resultado' in json) {\n            console.log(json.resultado, \"Resultado Recebido-------------\")\n\n            this.setState({ id: json.resultado.id })\n            this.setState({ rz_social: json.resultado.rz_social })\n            this.setState({ email: json.resultado.email })\n            this.setState({ telefone: json.resultado.telefone })\n            this.setState({ fax: json.resultado.fax })\n            this.setState({ tp_pessoa: json.resultado.tp_pessoa.toString() })\n            this.setState({ obs: json.resultado.obs })\n            this.setState({ cep: json.resultado.cep })\n            this.setState({ fantasia: json.resultado.fantasia })\n            this.setState({ contato: json.resultado.contato })\n            this.setState({ nome_red: json.resultado.nome_red })\n            this.setState({ cargo: json.resultado.cargo })\n            this.setState({ clientes: json.resultado.clientes })\n            this.setState({ cidade_red: json.resultado.cidade_red })\n            this.setState({ uf: json.resultado.estado })\n\n            this.setState({ telefone: json.resultado.telefone })\n            this.setState({ whatsapp: json.resultado.whatsapp })\n            this.setState({ banco: json.resultado.banco })\n            this.setState({ agencia: json.resultado.agencia })\n            this.setState({ conta: json.resultado.conta })\n            this.setState({ tp_conta: json.resultado.tp_conta })\n\n\n\n\n            this.setState({ insc_est: json.resultado.insc_est })\n            this.setState({ cnpj: json.resultado.cnpj })\n            this.setState({ cod_cont: json.resultado.cod_cont })\n\n            this.setState({ rua: json.resultado.rua })\n            this.setState({ bairro: json.resultado.bairro })\n            this.setState({ cod_cidade: json.resultado.cod_cidade })\n            this.setState({ uf: json.resultado.estado })\n            this.setState({ complemento: json.resultado.complemento })\n\n            this.setState({ status: json.resultado.status })\n\n            this.setState({ dt_cadastro: json.resultado.dt_create })\n\n\n\n\n            let dados = {\n              id_funcionario: json.resultado.id,\n              cep: json.resultado.cep,\n              rua: json.resultado.rua,\n              bairro: json.resultado.bairro,\n              cod_cidade: Number(json.resultado.cod_cidade),\n              uf: json.resultado.estado,\n              complemento: json.resultado.complemento,\n            }\n            localStorage.setItem('aba_endereco', JSON.stringify(dados))\n            this.setState({ aba_endereco: dados })\n\n            this.setState({ 'visible': true })\n\n\n          } else {\n            alert(json)\n          }\n\n\n        })\n\n    } else {\n      this.setState({ botao: \"Cadastrar\" })\n      this.setState({ visible: true })\n    }\n\n\n\n  }\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Modal\n          width={700}\n          title=\"Cadastro de Parceiros\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={(e) => this.CloseModal()}  >\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={this.cadastrar}>\n              Cadastrar\n            </Button>,\n          ]}\n        >\n          <Tabs onChange={console.log()} type=\"card\">\n            <TabPane tab=\"Dados do Parceiro\" key=\"1\">\n              <table>\n                <tr>\n                  <th>\n                    Tipo Pessoa:<br />\n                    <Select\n                      labelInValue\n                      defaultValue={{ value: '1' }}\n                      style={{ width: 190 }}\n                      onChange={(e) => { this.setState({ 'select_permission': e }) }}\n                    >\n                      <Option value=\"1\">JurÃ­dica</Option>\n                      <Option value=\"2\">FÃ­sica</Option>\n                    </Select>\n                  </th>\n                  <th>\n\n                    Data de Cadastro:<br />\n                    <DatePicker format={dateFormatList}\n                      disabled\n                      defaultValue={moment(this.state.dt_cadastro, dateFormat)} format={dateFormat}\n                    />\n\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    <b>RazÃ£o Social:</b>\n                    <Input placeholder=\"Rz. social\"\n                      defaultValue={this.state.rz_social}\n                      onChange={e => this.setState({ \"rz_social\": e.target.value })}\n                    />\n                  </th>\n                  <th>\n                    <b>Fantasia:</b>\n                    <Input placeholder=\"Fantasia\"\n                      defaultValue={this.state.fantasia}\n                      onChange={e => this.setState({ \"fantasia\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    <b>Telefone:</b>\n                    <Input\n                      placeholder=\"Telefone\"\n                      defaultValue={this.state.telefone}\n                      onChange={e => this.setState({ \"telefone\": formatToPhone(e.target.value) })} />\n                  </th>\n                  <th>\n                    <b>Whatsapp</b>\n                    <Input\n                      placeholder=\"Whatsapp\"\n                      defaultValue={this.state.whatsapp}\n                      onChange={e => this.setState({ \"whatsapp\": formatToPhone(e.target.value) })} />\n                  </th>\n                </tr>\n                <tr>\n\n                  <th>\n                    <b>Nome Red.:</b>\n                    <Input placeholder=\"Nome Red.\"\n                      defaultValue={this.state.nome_red}\n                      onChange={e => this.setState({ \"nome_red\": e.target.value })}\n                    />\n                  </th>\n                  <th>\n                    <b>Cidade Red.:</b>\n                    <Input placeholder=\"Cidade Red.\"\n                      defaultValue={this.state.cidade_red}\n                      onChange={e => this.setState({ \"cidade_red\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n                <tr>\n\n                  <th>\n                    <b>Email:</b>\n                    <Input placeholder=\"Email\"\n                      defaultValue={this.state.email}\n                      onChange={e => this.setState({ \"email\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n\n\n\n\n                <b>ObservaÃ§Ã£o:</b>\n                <tr>\n                  <th colspan=\"2\">\n                    <TextArea rows={4}\n                      defaultValue={this.state.obs}\n                      onChange={e => this.setState({ \"obs\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n\n            <TabPane tab=\"EndereÃ§o\" key=\"3\">\n\n              <AbaEndereco callbackFunction={(e) => this.setState(e)} />\n\n            </TabPane>\n\n            <TabPane tab=\"Documentos\" key=\"4\">\n              <table>\n                <tr>\n                  <th>\n                    Inscr. Est.:\n                    <Input placeholder=\"Inscr. Est.\"\n                      defaultValue={this.state.insc_est}\n                      onChange={e => this.setState({ \"insc_est\": e.target.value })}\n                    />\n                  </th>\n                  <th>\n                    CNPJ:\n                    <Input placeholder=\"CNPJ\"\n                      defaultValue={this.state.cnpj}\n                      onChange={e => this.setState({ \"cnpj\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Cod. Contab.:\n                    <Input placeholder=\"Cod. Contab.\"\n                      defaultValue={this.state.cod_cont}\n                      onChange={e => this.setState({ \"cod_cont\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n\n            <TabPane tab=\"Dados Bancarios\" key=\"5\">\n\n              <table>\n                <tr>\n                  <th>\n                    Banco:\n                    <Input placeholder=\"Banco\"\n                      defaultValue={this.state.banco}\n                      onChange={e => this.setState({ \"banco\": e.target.value })}\n                    />\n                  </th>\n                  <th>\n                    AgÃªncia:\n                    <Input placeholder=\"AgÃªncia\"\n                      defaultValue={this.state.agencia}\n                      onChange={e => this.setState({ \"agencia\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Conta:\n                    <Input placeholder=\"Conta\"\n                      defaultValue={this.state.conta}\n                      onChange={e => this.setState({ \"conta\": e.target.value })}\n                    />\n                  </th>\n                  <th>\n                    Tipo Conta:\n                    <Input placeholder=\"Tipo Conta\"\n                      defaultValue={this.state.tp_conta}\n                      onChange={e => this.setState({ \"tp_conta\": e.target.value })}\n                    />\n                  </th>\n                </tr>\n\n              </table>\n            </TabPane>\n            <TabPane tab=\"Contato\" key=\"6\">\n              <AbaContato />\n            </TabPane>\n          </Tabs>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CadParceiros;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaParceiros.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport CadFuncionario from './Cadastro_Funcionario'\nimport { getKeyThenIncreaseKey } from 'antd/lib/message';\n\nimport CadAgencia from './Cadastro_Agencia'\nimport CadParceiro from './Cadastro_Parceiros'\n\n\n\nconst data =  [\n  {\n    key: 1, \n    cnpj: \"32268484882\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 3, \n    cnpj: \"23432432\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 4, \n    cnpj: \"3243243\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 5, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 6, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 7, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }, \n  {\n    key: 8, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }\n]\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { Option } = Select;\n\nconst columns = [\n\n    {\n      title: 'Nome',\n      dataIndex: 'rz_social',\n\n    },\n    {\n      title: 'CNPJ',\n      dataIndex: 'cnpj',\n\n    },\n  \n  ];\n  \nclass PesquisaParceiro extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        cadastrar_tabela: false,\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        editar: false,\n        novo: false,\n        cod_func: \"\",\n        nome:\"\",\n        data:[]\n        \n         }\nthis.Update = this.Update.bind(this)\nthis.start = this.start.bind(this)\nthis.onSelectChange = this.onSelectChange.bind(this)\nthis.convertData = this.convertData.bind(this)\nthis.novo = this.novo.bind(this)\nthis.editar = this.editar.bind(this)\n// this.Consulta = this.Consulta.bind(this)\n\n    }\n    Update(e){\n        this.setState(e)\n    }\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n    \n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n      novo(){\n        let dados = {\n          cep:\"\",\n          rua:\"\",\n          bairro:\"\",\n          cod_cidade:\"\",\n          uf:\"\",\n          complemento:\"\",\n        }\n        localStorage.setItem('aba_endereco',JSON.stringify(dados))\n\n          // localStorage.clear();\n          this.setState({'novo':true})\n      }\n\n\n      editar(){\n     \n        if(this.state.selectedRowKeys.length===1){\n\n        console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n        this.setState({'editar':true})\n    }else{\n        alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n    }\n\n\n\n    CloseModal(){\n        this.props.history.push('/')\n        this.setState({\n          visible: false,\n        });\n      } \n\n    Consulta(){\n      if(this.state.nome.length<3){\n        alert(\"Para efetuar a busca Ã© necessÃ¡rio digitar pelo menos 3 caracteres\")\n\n      }else{\n      fetch('/api/consulta_parceiro', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_parceiro': {'nome':this.state.nome},\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({'data':json.parceiros})\n          // var dados = json.funcionarios.map(person => ({ key:person.id, nome: person.nome, cpf: person.cpf }));\n          // this.setState({data:dados})\n          \n          // console.log(dados)\n  \n        })\n\n      }\n\n    }\n\n    \n  \n\n    \n  \n   \n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n        return (\n          <div style={{ marginBottom: 16 }}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          {/* </div>\n            <div> */}\n            <Modal\n                           width={600}\n                           title=\"Pesquisa Parceiros\"\n                           onCancel={(e)=>this.CloseModal()}\n                           visible={this.state.visible}\n                           footer={[\n                            <Button key=\"back\" onClick={(e)=>this.CloseModal()}>\n                            Cancelar\n                  </Button>,                \n                         <Button key=\"Cadastrar\" type=\"primary\" onClick={()=>{this.novo()}}>\n                                   Novo\n                         </Button>,\n                                                  <Button key=\"Pesquisar\" type=\"primary\" onClick={()=>{this.Consulta()}}>\n                                                  Pesquisar\n                                        </Button>,\n                                                                 <Button key=\"Editar\" type=\"primary\" onClick={()=>{this.editar()}}>\n                                                                 Editar\n                                                       </Button>,\n\n                               \n                           ]}\n                       >\n                       <table>\n                         <tr>\n                             <th>\n                               Nome Parceiro\n                               <Input \n                               placeholder=\"Nome Parceiro\"\n                               defaultValue={this.state.nome} \n                               onChange={(e)=>{this.setState({'nome':e.target.value})}}\n                               \n                               />\n                               \n                               \n                               \n                                                   </th>\n                               <th>\n                      \n             </th>\n                             <th>\n           \n                               </th>\n                               </tr>\n                               <tr>\n                                 <th>\n                                   \n\n                                   </th>\n                                 </tr>\n                           \n                           </table>\n                           <div>\n                          \n\n                   <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                 </div>\n                     \n           \n           \n                           \n                           </Modal>\n\n{this.state.novo===true &&\n<CadParceiro callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n{this.state.editar===true &&\n<CadParceiro parceiro={this.state.selectedRowKeys[0]} callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n                   </div>\n                   \n      );\n    }\n  }\n  \n  export default PesquisaParceiro;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaAgencia.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport CadFuncionario from './Cadastro_Funcionario'\nimport { getKeyThenIncreaseKey } from 'antd/lib/message';\n\nimport CadAgencia from './Cadastro_Agencia'\n\n\n\nconst data =  [\n  {\n    key: 1, \n    cnpj: \"32268484882\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 3, \n    cnpj: \"23432432\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 4, \n    cnpj: \"3243243\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 5, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 6, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 7, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }, \n  {\n    key: 8, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }\n]\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { Option } = Select;\n\nconst columns = [\n\n    {\n      title: 'Nome',\n      dataIndex: 'nome',\n\n    },\n    {\n      title: 'CNPJ',\n      dataIndex: 'cnpj',\n\n    },\n  \n  ];\n  \nclass PesquisaAgencia extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        cadastrar_tabela: false,\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        editar: false,\n        novo: false,\n        cod_func: \"\",\n        nome:\"\",\n        data:[]\n        \n         }\nthis.Update = this.Update.bind(this)\nthis.start = this.start.bind(this)\nthis.onSelectChange = this.onSelectChange.bind(this)\nthis.convertData = this.convertData.bind(this)\nthis.novo = this.novo.bind(this)\nthis.editar = this.editar.bind(this)\n// this.Consulta = this.Consulta.bind(this)\n\n    }\n    Update(e){\n        this.setState(e)\n    }\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n    \n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n      novo(){\n        let dados = {\n          cep:\"\",\n          rua:\"\",\n          bairro:\"\",\n          cod_cidade:\"\",\n          uf:\"\",\n          complemento:\"\",\n        }\n        localStorage.setItem('aba_endereco',JSON.stringify(dados))\n\n          // localStorage.clear();\n          this.setState({'novo':true})\n      }\n\n\n      editar(){\n     \n        if(this.state.selectedRowKeys.length===1){\n\n        console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n        this.setState({'editar':true})\n    }else{\n        alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n    }\n\n\n\n    CloseModal(){\n        this.props.history.push('/')\n        this.setState({\n          visible: false,\n        });\n      } \n\n    Consulta(){\n      if(this.state.nome.length<3){\n        alert(\"Para efetuar a busca Ã© necessÃ¡rio digitar pelo menos 3 caracteres\")\n\n      }else{\n      fetch('/api/consulta_agencia', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_agencia': {'nome':this.state.nome},\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({'data':json.funcionarios})\n          // var dados = json.funcionarios.map(person => ({ key:person.id, nome: person.nome, cpf: person.cpf }));\n          // this.setState({data:dados})\n          \n          // console.log(dados)\n  \n        })\n\n      }\n\n    }\n\n    \n  \n\n    \n  \n   \n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n        return (\n          <div style={{ marginBottom: 16 }}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          {/* </div>\n            <div> */}\n            <Modal\n                           width={600}\n                           title=\"Pesquisa AgÃªncias\"\n                           visible={this.state.visible}\n                           onCancel={(e)=>this.CloseModal()}\n                           footer={[\n                            <Button key=\"back\" onClick={(e)=>this.CloseModal()}>\n                            Cancelar\n                  </Button>,                \n                         <Button key=\"Cadastrar\" type=\"primary\" onClick={()=>{this.novo()}}>\n                                   Novo\n                         </Button>,\n                                                  <Button key=\"Pesquisar\" type=\"primary\" onClick={()=>{this.Consulta()}}>\n                                                  Pesquisar\n                                        </Button>,\n                                                                 <Button key=\"Editar\" type=\"primary\" onClick={()=>{this.editar()}}>\n                                                                 Editar\n                                                       </Button>,\n\n                               \n                           ]}\n                       >\n                       <table>\n                         <tr>\n                             <th>\n                               Nome AgÃªncia\n                               <Input \n                               placeholder=\"Nome FuncionÃ¡rio\"\n                               defaultValue={this.state.nome} \n                               onChange={(e)=>{this.setState({'nome':e.target.value})}}\n                               \n                               />\n                               \n                               \n                               \n                                                   </th>\n                               <th>\n                      \n             </th>\n                             <th>\n           \n                               </th>\n                               </tr>\n                               <tr>\n                                 <th>\n                                   \n\n                                   </th>\n                                 </tr>\n                           \n                           </table>\n                           <div>\n                          \n\n                   <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                 </div>\n                     \n           \n           \n                           \n                           </Modal>\n\n{this.state.novo===true &&\n<CadAgencia callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n{this.state.editar===true &&\n<CadAgencia agencia={this.state.selectedRowKeys[0]} callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n                   </div>\n                   \n      );\n    }\n  }\n  \n  export default PesquisaAgencia;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaVeiculos.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport CadFuncionario from './Cadastro_Funcionario'\nimport { getKeyThenIncreaseKey } from 'antd/lib/message';\n\nimport CadAgencia from './Cadastro_Agencia'\nimport CadVeiculos from './Cadastro_Veiculos'\n\n\n\nconst data =  [\n  {\n    key: 1, \n    cnpj: \"32268484882\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 3, \n    cnpj: \"23432432\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 4, \n    cnpj: \"3243243\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 5, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 6, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 7, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }, \n  {\n    key: 8, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }\n]\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { Option } = Select;\n\nconst columns = [\n\n    {\n      title: 'RazÃ£o Social',\n      dataIndex: 'nome',\n\n    },\n    {\n      title: 'CNPJ',\n      dataIndex: 'cnpj',\n\n    },\n  \n  ];\n  \nclass PesquisaVeiculos extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        cadastrar_tabela: false,\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        editar: false,\n        novo: false,\n        cod_func: \"\",\n        nome:\"\",\n        data:[]\n        \n         }\nthis.Update = this.Update.bind(this)\nthis.start = this.start.bind(this)\nthis.onSelectChange = this.onSelectChange.bind(this)\nthis.convertData = this.convertData.bind(this)\nthis.novo = this.novo.bind(this)\nthis.editar = this.editar.bind(this)\n// this.Consulta = this.Consulta.bind(this)\n\n    }\n    Update(e){\n        this.setState(e)\n    }\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n    \n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n      novo(){\n        let dados = {\n          cep:\"\",\n          rua:\"\",\n          bairro:\"\",\n          cod_cidade:\"\",\n          uf:\"\",\n          complemento:\"\",\n        }\n        localStorage.setItem('aba_endereco',JSON.stringify(dados))\n\n          // localStorage.clear();\n          this.setState({'novo':true})\n      }\n\n\n      editar(){\n     \n        if(this.state.selectedRowKeys.length===1){\n\n        console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n        this.setState({'editar':true})\n    }else{\n        alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n    }\n\n\n\n    CloseModal(){\n        this.props.history.push('/')\n        this.setState({\n          visible: false,\n        });\n      } \n\n    Consulta(){\n      if(this.state.nome.length<3){\n        alert(\"Para efetuar a busca Ã© necessÃ¡rio digitar pelo menos 3 caracteres\")\n\n      }else{\n      fetch('/api/consulta_veiculo', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_veiculo': {'nome':this.state.nome},\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n            if(json.veiculos.length > 0){\n          this.setState({'data':json.veiculos})}else{\n              alert(\"Nenhum resultado retornado\")\n          }\n          // var dados = json.funcionarios.map(person => ({ key:person.id, nome: person.nome, cpf: person.cpf }));\n          // this.setState({data:dados})\n          \n          // console.log(dados)\n  \n        })\n\n      }\n\n    }\n\n    \n  \n\n    \n  \n   \n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n        return (\n          <div style={{ marginBottom: 16 }}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          {/* </div>\n            <div> */}\n            <Modal\n                           width={600}\n                           title=\"Pesquisa Veiculos\"\n                           visible={this.state.visible}\n                           onCancel={(e)=>this.CloseModal()}\n                           footer={[\n                            <Button key=\"back\" onClick={(e)=>this.CloseModal()}>\n                            Cancelar\n                  </Button>,                \n                         <Button key=\"Cadastrar\" type=\"primary\" onClick={()=>{this.novo()}}>\n                                   Novo\n                         </Button>,\n                                                  <Button key=\"Pesquisar\" type=\"primary\" onClick={()=>{this.Consulta()}}>\n                                                  Pesquisar\n                                        </Button>,\n                                                                 <Button key=\"Editar\" type=\"primary\" onClick={()=>{this.editar()}}>\n                                                                 Editar\n                                                       </Button>,\n\n                               \n                           ]}\n                       >\n                       <table>\n                         <tr>\n                             <th>\n                               Nome Veiculo\n                               <Input \n                               placeholder=\"Nome Veiculo\"\n                               defaultValue={this.state.nome} \n                               onChange={(e)=>{this.setState({'nome':e.target.value})}}\n                               \n                               />\n                               \n                               \n                               \n                                                   </th>\n                               <th>\n                      \n             </th>\n                             <th>\n           \n                               </th>\n                               </tr>\n                               <tr>\n                                 <th>\n                                   \n\n                                   </th>\n                                 </tr>\n                           \n                           </table>\n                           <div>\n                          \n\n                   <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                 </div>\n                     \n           \n           \n                           \n                           </Modal>\n\n{this.state.novo===true &&\n<CadVeiculos callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n{this.state.editar===true &&\n<CadVeiculos veiculo={this.state.selectedRowKeys[0]} callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n                   </div>\n                   \n      );\n    }\n  }\n  \n  export default PesquisaVeiculos;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaAnunciantes.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport CadFuncionario from './Cadastro_Funcionario'\nimport { getKeyThenIncreaseKey } from 'antd/lib/message';\n\nimport CadAnunciantes from './Cadastro_Anunciantes'\n\n\n\nconst data =  [\n  {\n    key: 1, \n    cnpj: \"32268484882\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 3, \n    cnpj: \"23432432\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 4, \n    cnpj: \"3243243\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 5, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 6, \n    cnpj: \"teste\", \n    nome: \"rogerio de aquino silva\"\n  }, \n  {\n    key: 7, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }, \n  {\n    key: 8, \n    cnpj: \"teste\", \n    nome: \"rogerio\"\n  }\n]\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { Option } = Select;\n\nconst columns = [\n\n    {\n      title: 'Nome',\n      dataIndex: 'nome',\n\n    },\n    {\n      title: 'CNPJ',\n      dataIndex: 'cnpj',\n\n    },\n  \n  ];\n  \nclass PesquisaAnunciantes extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:true,\n        select_permission: undefined,\n        cadastrar_tabela: false,\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        editar: false,\n        novo: false,\n        cod_func: \"\",\n        nome:\"\",\n        data:[]\n        \n         }\nthis.Update = this.Update.bind(this)\nthis.start = this.start.bind(this)\nthis.onSelectChange = this.onSelectChange.bind(this)\nthis.convertData = this.convertData.bind(this)\nthis.novo = this.novo.bind(this)\nthis.editar = this.editar.bind(this)\n// this.Consulta = this.Consulta.bind(this)\n\n    }\n    Update(e){\n        this.setState(e)\n    }\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n    \n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n      novo(){\n        let dados = {\n          cep:\"\",\n          rua:\"\",\n          bairro:\"\",\n          cod_cidade:\"\",\n          uf:\"\",\n          complemento:\"\",\n        }\n        localStorage.setItem('aba_endereco',JSON.stringify(dados))\n\n          // localStorage.clear();\n          this.setState({'novo':true})\n      }\n\n\n      editar(){\n     \n        if(this.state.selectedRowKeys.length===1){\n\n        console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n        this.setState({'editar':true})\n    }else{\n        alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n    }\n\n\n\n    CloseModal(){\n        this.props.history.push('/')\n        this.setState({\n          visible: false,\n        });\n      } \n\n    Consulta(){\n      if(this.state.nome.length<3){\n        alert(\"Para efetuar a busca Ã© necessÃ¡rio digitar pelo menos 3 caracteres\")\n\n      }else{\n      fetch('/api/consulta_anunciante', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_anunciante': {'nome':this.state.nome},\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          this.setState({'data':json.anunciantes})\n          // var dados = json.funcionarios.map(person => ({ key:person.id, nome: person.nome, cpf: person.cpf }));\n          // this.setState({data:dados})\n          \n          // console.log(dados)\n  \n        })\n\n      }\n\n    }\n\n    \n  \n\n    \n  \n   \n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n        return (\n          <div style={{ marginBottom: 16 }}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          {/* </div>\n            <div> */}\n            <Modal\n                           width={600}\n                           title=\"Pesquisa Anunciantes\"\n                           visible={this.state.visible}\n                           onCancel={(e)=>this.CloseModal()}\n                           footer={[\n                            <Button key=\"back\" onClick={(e)=>this.CloseModal()}>\n                            Cancelar\n                  </Button>,                \n                         <Button key=\"Cadastrar\" type=\"primary\" onClick={()=>{this.novo()}}>\n                                   Novo\n                         </Button>,\n                                                  <Button key=\"Pesquisar\" type=\"primary\" onClick={()=>{this.Consulta()}}>\n                                                  Pesquisar\n                                        </Button>,\n                                                                 <Button key=\"Editar\" type=\"primary\" onClick={()=>{this.editar()}}>\n                                                                 Editar\n                                                       </Button>,\n\n                               \n                           ]}\n                       >\n                       <table>\n                         <tr>\n                             <th>\n                               Nome Anunciante\n                               <Input \n                               placeholder=\"Nome Anunciante\"\n                               defaultValue={this.state.nome} \n                               onChange={(e)=>{this.setState({'nome':e.target.value})}}\n                               \n                               />\n                               \n                               \n                               \n                                                   </th>\n                               <th>\n                      \n             </th>\n                             <th>\n           \n                               </th>\n                               </tr>\n                               <tr>\n                                 <th>\n                                   \n\n                                   </th>\n                                 </tr>\n                           \n                           </table>\n                           <div>\n                          \n\n                   <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                 </div>\n                     \n           \n           \n                           \n                           </Modal>\n\n{this.state.novo===true &&\n<CadAnunciantes callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n{this.state.editar===true &&\n<CadAnunciantes anunciante={this.state.selectedRowKeys[0]} callbackModal={(e)=>{this.setState(e)}}/>\n}\n\n                   </div>\n                   \n      );\n    }\n  }\n  \n  export default PesquisaAnunciantes;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_Anunciantes.js",["316","317","318","319","320","321","322","323","324"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, DatePicker } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\nimport moment from 'moment';\nimport AbaEndereco from '../molecule/AbaEndereco'\nimport AbaContato from '../molecule/Contato'\n\nconst dateFormat = 'DD/MM/YYYY';\nconst monthFormat = 'YYYY/MM';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass CadAnunciantes extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        visible:false,\n        select_permission: undefined,\n        \n        id: \"\",\n        nome: \"\",\n        fantasia:\"\",\n        cnpj:\"\",\n        agencia_select:\"\",\n        tp_pessoa:\"1\",\n        classificacao:\"\",\n        telefone:\"\",\n        observacao:\"\",\n        whatsapp:\"\",\n        cep:\"\",\n        rua:\"\",\n        bairro:\"\",\n        cod_cidade:\"\",\n        uf:\"\",\n        complemento:\"\",\n        banco:\"\",\n        agencia:\"\",\n        conta:\"\",\n        tp_conta:\"\",\n        historico:\"\",\n        insc_est: \"\", \n        cod_cont:\"\", \n        nome_red: \"\",\n        cidade_red: \"\",\n        dt_cadastro: new Date(),\n        botao: \"Editar\",\n\n\n\n\n         }\n\n         this.convertData = this.convertData.bind(this)\n         this.cadastrar = this.cadastrar.bind(this)\n    }\n\n    cadastrar(){\n\n    \n      let dados_cadastro = {\n        'id': this.state.id,\n        'nome': this.state.nome,\n        'fantasia':this.state.fantasia,\n        'cnpj':this.state.cnpj,\n        'agencia_select':this.state.agencia_select,\n        'tp_pessoa':\"1\",\n        'classificacao':this.state.classificacao,\n        'telefone':this.state.telefone,\n        'observacao':this.state.observacao,\n        'whatsapp':this.state.whatsapp,\n        'cep':this.state.cep,\n        'rua':this.state.rua,\n        'bairro':this.state.bairro,\n        'cod_cidade':this.state.cod_cidade,\n        'uf':this.state.uf,\n        'complemento':this.state.complemento,\n        'banco':this.state.banco,\n        'agencia':this.state.agencia,\n        'conta':this.state.conta,\n        'tp_conta':this.state.tp_conta,\n        'historico':this.state.historico,\n        'insc_est':this.state.insc_est, \n        'cod_cont':this.state.cod_cont, \n        'nome_red':this.state.nome_red,\n        'cidade_red':this.state.cidade_red,\n        \n\n      }\n    \n  console.log(\"Dados de cadastro: \", dados_cadastro)  \n      fetch('/api/cadastra_anunciante', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'cadastro_anunciante': dados_cadastro,\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n    \n    if('id_agencia' in json){\n      this.setState({'cod_funcionario':json.id_funcionario})\n      alert(\"FuncionÃ¡rio cadastrado com sucesso!\")\n      this.props.callbackModal({'novo':false})\n    }if('msg' in json){\n      alert(json.msg)\n      \n      \n      // this.setState({visible:false})\n      this.props.callbackModal({'editar':false})\n      \n      \n    }\n    \n    else{\n      alert(json)\n    }\n          \n    \n    \n        })\n    }\n\n\n    convertData(str) {\n        var date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [day,mnth,date.getFullYear()].join(\"/\");\n    }\n\n    CloseModal(){\n\n      this.setState({\n        visible: false,\n      });\n    } \n\n\n    componentDidMount(){\n  \n      if (this.props.anunciante !== undefined){\n    console.log(\"cod_agencia: que chegou\", this.props.anunciante)\n    fetch('/api/carregadadosanunciante', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'consulta_anunciante':this.props.anunciante\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n    \n    \n    if('resultado' in json){\n    console.log(json.resultado, \"Resultado Recebido-------------\")\n\n    \n    this.setState({id: json.resultado.id})\n    this.setState({nome: json.resultado.nome})\n    this.setState({fantasia: json.resultado.fantasia})\n    this.setState({cnpj: json.resultado.cnpj})\n    this.setState({agencia_select: json.resultado.agencia_select})\n    this.setState({tp_pessoa: json.resultado.tp_pessoa.toString()})\n    this.setState({classificacao: json.resultado.classificacao})\n    this.setState({telefone: json.resultado.telefone})\n    this.setState({observacao: json.resultado.observacao})\n    this.setState({whatsapp: json.resultado.whatsapp})\n    this.setState({cep: json.resultado.cep})\n    this.setState({rua: json.resultado.rua})\n    this.setState({bairro: json.resultado.bairro})\n    this.setState({cod_cidade: json.resultado.cod_cidade})\n    this.setState({uf: json.resultado.estado})\n    \n    this.setState({complemento: json.resultado.complemento})\n    this.setState({banco: json.resultado.banco})\n    this.setState({agencia: json.resultado.agencia})\n\n    this.setState({conta: json.resultado.conta})\n    this.setState({tp_conta: json.resultado.tp_conta})\n    this.setState({historico: json.resultado.historico})\n    this.setState({insc_est: json.resultado.insc_est})\n    this.setState({cod_cont: json.resultado.cod_cont})\n\n    this.setState({nome_red: json.resultado.nome_red})\n\n    this.setState({cidade_red: json.resultado.cidade_red})\n    this.setState({dt_cadastro: json.resultado.dt_create})\n    \n    \n    \n    \n    let dados = {\n      id_anunciante: json.resultado.id,\n      cep:json.resultado.cep,\n      rua:json.resultado.rua,\n      bairro:json.resultado.bairro,\n      cod_cidade: Number(json.resultado.cod_cidade),\n      uf:json.resultado.estado,\n      complemento:json.resultado.complemento,\n    }\n    localStorage.setItem('aba_endereco',JSON.stringify(dados))\n    this.setState({aba_endereco: dados})\n    \n    this.setState({'visible':true})\n    \n    \n    }else{\n    alert(json)\n    }\n    \n    \n      })\n    \n    }else{\n      this.setState({botao: \"Cadastrar\"})\n      this.setState({visible:true})\n    }\n    \n    \n    \n    }\n    \n     \n    render() {\n      return (\n        <div>\n        <Modal\n                       width={700}\n                       title=\"Cadastro de Anunciantes\"\n                       visible={this.state.visible}\n                       onCancel={(e)=>this.CloseModal()}\n                       footer={[\n                           <Button key=\"back\"  onClick={(e) => this.CloseModal()}>\n                               Cancelar\n                     </Button>,\n                           <Button key=\"Cadastrar\" type=\"primary\" onClick={this.cadastrar}>\n                               Cadastrar\n                     </Button>,\n                       ]}\n                   >                \n                   <Tabs onChange={console.log()} type=\"card\">              \n                   <TabPane tab=\"Dados do Anunciante\" key=\"1\">\n                   <table>\n                     <tr>\n                         <th>\n                   Tipo Pessoa:<br/>\n                   <Select\n           labelInValue\n           defaultValue={{ value: '1' }}\n           style={{ width: 190}}\n           onChange={(e) => { this.setState({ 'select_permission': e }) }}\n         >\n           <Option value=\"1\">JurÃ­dica</Option>\n           <Option value=\"2\">FÃ­sica</Option>\n         </Select>\n         </th>\n         <th>\n           \n         Data de Cadastro:<br/>\n                             <DatePicker format={dateFormatList}\n                             disabled\n                             defaultValue={moment(this.state.dt_cadastro, dateFormatList[0])} format={dateFormatList}  \n                             \n                             />\n       \n             </th>\n             <th>\n             <b>ClassificaÃ§Ã£o.:</b> \n                     <Input \n                      defaultValue={this.state.classificacao}\n                      onChange={e =>this.setState({classificacao:e.target.value})}\n                     placeholder=\"ClassificaÃ§Ã£o\" />\n                 </th>\n         </tr>\n         </table>\n             <table>\n         <tr>\n         <th>\n                     <b>Nome:</b> \n                     <Input placeholder=\"Nome\"\n                     defaultValue={this.state.nome}\n                     onChange={e =>this.setState({nome:e.target.value})}\n                     />\n                     </th>\n                     <th>\n                     <b>Fantasia:</b> \n                     <Input \n                     defaultValue={this.state.fantasia}\n                     onChange={e =>this.setState({fantasia:e.target.value})}\n                     placeholder=\"Fantasia\" />\n                     </th>\n                     </tr>\n                     <tr>\n                     <th>\n                     <b>Telefone:</b> \n                     <Input \n                     placeholder=\"Telefone\" \n                     defaultValue={this.state.telefone}\n                     onChange={e =>this.setState({telefone:formatToPhone(e.target.value)})}  />\n                     </th>\n             <th>\n                     <b>Whatsapp</b> \n                     <Input \n                     placeholder=\"Whatsapp\" \n                     defaultValue={this.state.whatsapp}\n                     onChange={e =>this.setState({whatsapp:formatToPhone(e.target.value)})}  />\n                     </th>\n                   </tr>\n                   <tr>\n                         \n                     <th>\n                     <b>Nome Red.:</b> \n                     <Input \n                     defaultValue={this.state.nome_red}\n                     onChange={e =>this.setState({nome_red:e.target.value})}\n                     placeholder=\"Nome Red.\" />\n                     </th>\n                     </tr>\n                     <tr>\n                     <th>\n                     <b>Cidade Red.:</b> \n                     <Input \n                    defaultValue={this.state.cidade_red}\n                    onChange={e =>this.setState({cidade_red:e.target.value})}\n                     placeholder=\"Cidade Red.\" />\n                     </th>\n                     <th>\n                   Agencia:<br/>\n                   <Select\n           labelInValue\n           defaultValue={{ value: '1' }}\n           style={{ width: 190}}\n           onChange={(e) => { this.setState({ agencia_select: e.value }) }}\n         >\n           <Option value=\"1\">Agencia 1</Option>\n           <Option value=\"2\">Agencia 2</Option>\n         </Select>\n         </th>\n                     </tr>\n                   <b>ObservaÃ§Ã£o:</b>\n                       <tr>\n                         <th  colspan=\"2\">\n                         <TextArea \n                          defaultValue={this.state.observacao}\n                          onChange={e =>this.setState({observacao:e.target.value})}\n                         rows={4} />\n                           </th>\n                         </tr>\n         </table>\n                   </TabPane>\n       \n                   <TabPane tab=\"EndereÃ§o\" key=\"3\">\n         \n       <AbaEndereco callbackFunction={(e)=>this.setState(e)}/>\n       \n                   </TabPane>\n                     \n                   <TabPane tab=\"Documentos\" key=\"4\">\n                   <table>\n                     <tr>\n                           <th>\n                             Inscr. Est.:\n                             <Input \n                              defaultValue={this.state.insc_est}\n                              onChange={e =>this.setState({insc_est:e.target.value})}\n                             placeholder=\"Inscr. Est.\" />\n                             </th>\n                         <th>\n                           CNPJ:\n                           <Input \n                           defaultValue={this.state.cnpj}\n                           onChange={e =>this.setState({cnpj:e.target.value})}\n                           placeholder=\"CNPJ\" />\n                           </th>\n                           </tr>\n                           <tr>\n                         <th>\n                           Cod. Contab.:\n                           <Input \n                           defaultValue={this.state.cod_cont}\n                           onChange={e =>this.setState({cod_cont:e.target.value})}\n                           placeholder=\"Cod. Contab.\" />\n                           </th>\n                           </tr>\n                       \n                       </table>\n                   </TabPane>\n       \n                   <TabPane tab=\"Dados Bancarios\" key=\"5\">\n                   \n                   <table>\n                     <tr>\n                         <th>\n                           Banco:\n                           <Input \n                           defaultValue={this.state.banco}\n                           onChange={e =>this.setState({banco:e.target.value})}\n                           placeholder=\"Banco\" />\n                           </th>\n                           <th>\n                             AgÃªncia:\n                             <Input \n                            defaultValue={this.state.agencia}\n                            onChange={e =>this.setState({agencia:e.target.value})}\n                             placeholder=\"AgÃªncia\" />\n                             </th>\n                           </tr>\n                           <tr>\n                         <th>\n                           Conta:\n                           <Input \n                           defaultValue={this.state.conta}\n                           onChange={e =>this.setState({conta:e.target.value})}\n                           placeholder=\"Conta\" />\n                           </th>\n                           <th>\n                             Tipo Conta:\n                             <Input \n                             defaultValue={this.state.tp_conta}\n                             onChange={e =>this.setState({tp_conta:e.target.value})}\n                             placeholder=\"Tipo Conta\" />\n                             </th>\n                           </tr>\n                       \n                       </table>\n                       </TabPane>\n                       <TabPane tab=\"Contato\" key=\"6\">\n                       <AbaContato/>\n                       </TabPane>\n                       </Tabs>\n                       </Modal>\n               </div>\n      );\n    }\n  }\n  \n  export default CadAnunciantes;\n  \n  \n  ","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Tabela_Preco.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, AutoComplete, Upload, message } from 'antd';\nimport { Input } from 'antd';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\n\nimport { InboxOutlined } from '@ant-design/icons';\nconst { Dragger } = Upload;\n\nconst dateFormat = 'DD/MM/YYYY';\nconst monthFormat = 'YYYY/MM';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst children = [];\n\nchildren.push(<Option key=\"1\">RÃ¡dio</Option>);\nchildren.push(<Option key=\"2\">Jornal</Option>);\nchildren.push(<Option key=\"3\">Outros</Option>);\n\n\n\nclass TabelaPreco extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: true,\n      select_permission: undefined,\n      mapas: [],\n      mapa: \"\",\n      photo: \"\",\n    }\n\n  }\n  handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n\n\n  render() {\n\n    const onSelectMapas = (value, option) => {\n      this.setState({ mapa: option.key })\n    };\n\n    const handleSearchMapas = (value) => {\n      this.setState({\n        mapas: new Array(\"JANEIRO - 2020\", \"DEZEMBRO - 2021\", \"FEVERIRO - 2019\").map((value, id) => {\n          return {\n            key: id,\n            value: value,\n          };\n        })\n      })\n      // fetch('/api/consulta_mapapi', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json'\n      //   },\n      //   body: JSON.stringify({\n      //     'consulta_anunciante': { 'nome': value },\n      //   })\n      // })\n      //   .then((r) => r.json())\n      //   .then((json) => {\n      //     var dados = json.anunciantes.map(anunciante => {\n      //       return {\n      //         value: anunciante.key + ' - ' + anunciante.nome,\n      //         key: anunciante.key,\n      //         label: (\n      //           <div\n      //             style={{\n      //               display: 'flex',\n      //               justifyContent: 'space-between',\n      //             }}\n      //           >\n      //             <span>\n      //               {anunciante.nome}\n      //             </span>\n      //           </div>\n      //         ),\n      //       }\n      //     });\n\n      //     this.setState({ anunciantes: dados })\n      //   })\n    };\n\n    const onChange = (info) => {\n      const { status } = info.file;\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`);\n        this.setState({ photo: info.file })\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n    const dummyRequest = ({ file, onSuccess }) => {\n      setTimeout(() => {\n        onSuccess(\"ok\");\n      }, 0);\n    };\n\n\n    const props = {\n    };\n    return (\n      <div>\n        <Modal\n          width={600}\n          title=\"Tabela de PreÃ§os\"\n          visible={this.state.visible}\n          onCancel={() => this.props.callback({ 'cadastrar_tabela': false })}\n          footer={[\n            <Button key=\"back\" onClick={() => this.props.callback({ 'cadastrar_tabela': false })}>\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={console.log()}>\n              Cadastrar\n            </Button>,\n          ]}\n        >\n          <table>\n\n            <tr>\n              <th valign=\"bottom\" align=\"right\" >\n                Inicial:<> </>\n              </th>\n              <th>\n                <b>Ano:</b>\n                <Input placeholder=\"Ano\" />\n              </th>\n              <th>\n                MÃªs:<br />\n                <Select\n                  labelInValue\n                  defaultValue={{ value: '1' }}\n                  style={{ width: 190 }}\n                  size=\"12\"\n                  onChange={(e) => { this.setState({ 'select_permission': e }) }}\n                >\n                  <Option value=\"1\">Janeiro</Option>\n                  <Option value=\"2\">Fevereiro</Option>\n                  <Option value=\"3\">MarÃ§o</Option>\n                  <Option value=\"4\">Abril</Option>\n                  <Option value=\"5\">Maio</Option>\n                  <Option value=\"6\">Junho</Option>\n                  <Option value=\"7\">Julho</Option>\n                  <Option value=\"8\">Agosto</Option>\n                  <Option value=\"9\">Setembro</Option>\n                  <Option value=\"10\">Outubro</Option>\n                  <Option value=\"11\">Novembro</Option>\n                  <Option value=\"12\">Dezembro</Option>\n                </Select>\n              </th>\n            </tr>\n            <tr>\n              <th valign=\"bottom\" align=\"right\" >\n                Final: <> </>\n              </th>\n\n              <th>\n                <b>Ano:</b>\n                <Input placeholder=\"Ano\" />\n              </th>\n              <th>\n                MÃªs:<br />\n                <Select\n                  labelInValue\n                  defaultValue={{ value: '1' }}\n                  style={{ width: 190 }}\n                  onChange={(e) => { this.setState({ 'select_permission': e }) }}\n                >\n                  <Option value=\"1\">Janeiro</Option>\n                  <Option value=\"2\">Fevereiro</Option>\n                  <Option value=\"3\">MarÃ§o</Option>\n                  <Option value=\"4\">Abril</Option>\n                  <Option value=\"5\">Maio</Option>\n                  <Option value=\"6\">Junho</Option>\n                  <Option value=\"7\">Julho</Option>\n                  <Option value=\"8\">Agosto</Option>\n                  <Option value=\"9\">Setembro</Option>\n                  <Option value=\"10\">Outubro</Option>\n                  <Option value=\"11\">Novembro</Option>\n                  <Option value=\"12\">Dezembro</Option>\n                </Select>\n              </th>\n            </tr>\n\n          </table>\n          <br />\n          <table>\n            <tr>\n              <th>\n                Tipo de Veiculo:\n              </th>\n\n              <th width=\"70%\">\n\n\n                <Select\n                  style={{ width: '100%' }}\n                  mode=\"multiple\"\n                  onChange={this.handleChange}\n                >\n                  {children}\n                </Select>\n\n              </th>\n            </tr>\n            <tr>\n\n              <th>\n                Mapa/PI:\n              </th>\n              <th>\n\n                <AutoComplete\n                  dropdownMatchSelectWidth={252}\n                  style={{\n                    width: 310,\n                  }}\n                  options={this.state.mapas}\n                  onSelect={onSelectMapas}\n                  onSearch={handleSearchMapas}>\n                  <Input.Search size=\"large\" placeholder=\"Mapa/PI\" enterButton />\n                </AutoComplete>\n              </th>\n            </tr>\n          </table>\n          <table>\n            <tr>\n              <th>\n\n                <Dragger style={{ width: 445, }}\n                  name='file'\n                  multiple={false}\n                  customRequest={dummyRequest}\n                  onChange={onChange}\n                  maxCount={1}>\n                  <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                  </p>\n                  <p className=\"ant-upload-text\">Clique ou arraste uma imagem</p>\n                </Dragger>\n              </th>\n            </tr>\n          </table>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TabelaPreco;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/TESTE_TABELA.js",["339"],"// /* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {  Button } from 'antd';\nimport {\n  randomCreatedDate,\n  randomTraderName,\n  randomUpdatedDate,\n} from '@material-ui/x-grid-data-generator';\n\nexport default function EditRowModelControlGrid() {\n  const [editRowsModel, setEditRowsModel] = React.useState({});\n\n  const handleEditRowModelChange = React.useCallback((params) => {\n    setEditRowsModel(params.model);\n   console.log(JSON.stringify(editRowsModel), '---------console.')\n  }, []);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <code>editRowsModel: {JSON.stringify(editRowsModel)}</code>\n      <div style={{ height: 400, width: '100%' }}>\n\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          editRowsModel={editRowsModel}\n          onEditRowModelChange={handleEditRowModelChange}\n        />\n                    <Button key=\"Cadastrar\" type=\"primary\" onClick={console.log(handleEditRowModelChange)}>\n                        Cadastrar\n              </Button>,\n      </div>\n    </div>\n  );\n}\n\nconst columns = [\n  { field: 'name', headerName: 'Name', width: 180, editable: true },\n  { field: 'age', headerName: 'Age', type: 'number', editable: true },\n  {\n    field: 'dateCreated',\n    headerName: 'Date Created',\n    type: 'date',\n    width: 180,\n    editable: true,\n  },\n  {\n    field: 'lastLogin',\n    headerName: 'Last Login',\n    type: 'dateTime',\n    width: 220,\n    editable: true,\n  },\n];\n\nconst rows = [\n  {\n    id: 1,\n    name: randomTraderName(),\n    age: 25,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 2,\n    name: randomTraderName(),\n    age: 36,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 3,\n    name: randomTraderName(),\n    age: 19,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 4,\n    name: randomTraderName(),\n    age: 28,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 5,\n    name: randomTraderName(),\n    age: 23,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n];",["340","341"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Historico.js",["342","343","344","345","346","347","348","349","350","351"],"import React, { Component, Image } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, Table, DatePicker } from 'antd';\nimport { Input } from 'antd';\n\nconst dateFormat = 'YYYY/MM/DD';\nconst monthFormat = 'YYYY/MM';\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nconst { TextArea } = Input;\n\nconst columns = [\n    {\n      title: 'Data',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Cargo',\n      dataIndex: 'age',\n    },\n    {\n      title: 'Salario',\n      dataIndex: 'address',\n    },\n  ];\n  \n  const data = [];\n  for (let i = 0; i < 46; i++) {\n    data.push({\n      key: i,\n      name: `01/01/200${i}`,\n      age: `Analista de Dados ${i}`,\n      address: `R$ 50${i},00`,\n    });\n  }\n\nclass HistFunc extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedRowKeys: [], // Check here to configure the default column\n      loading: false,\n      data: '05/09/1964',\n\n       }\n       this.start = this.start.bind(this)\n       this.onSelectChange = this.onSelectChange.bind(this)\n       this.convertData = this.convertData.bind(this)\n  }\n  convertData(str) {\n    var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getDate()).slice(-2);\n    return [day,mnth,date.getFullYear()].join(\"/\");\n}\n  start = () => {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  onSelectChange = selectedRowKeys => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { loading, selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <div>\n            <table>\n              <tr>\n                  <th>\n                    Data:\n                    <DatePicker format={dateFormatList}\n                                    onChange={(e) => {if(e!==null) {this.setState({ 'data': this.convertData(e._d) })}}} />\n                    </th>\n                    <th>\n                      Cargo:\n                      <Input placeholder=\"Cargo:\" />\n                      </th>\n                  <th>\n                    Salario:\n                    <Input placeholder=\"Salario:\" />\n                    </th>\n                    </tr>\n                \n                </table>\n                <div>\n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>\n            Insere  \n          </Button><>  </>\n          <Button type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>\n            Exclui  \n          </Button>\n          <span style={{ marginLeft: 8 }}>\n            {hasSelected ? `Selected ${this.state.selectedRowKeys.length} items` : ''}\n          </span>\n        </div>\n        <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n      </div>\n          </div>\n          )\n}\n}\nexport default HistFunc;","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaMapaPi.js",["352","353"],"/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/PesquisaMapaPI.js",["354","355","356","357","358"],"import React from 'react';\nimport { Modal, Button, Select, Tabs, DatePicker, Table } from 'antd';\nimport CadMapaPi from './Cadastro_MapaPI'\nimport moment from 'moment';\n\n\nconst dateFormat = 'DD/MM/YYYY';\nconst dateFormatEn = 'YYYY-MM-DD';\nconst { Option } = Select;\n\nconst columns = [\n  {\n    title: 'NÃºmero da AgÃªncia',\n    dataIndex: ['cadastro_mapa','numero_agencia'],\n  },\n  {\n    title: 'EmissÃ£o',\n    dataIndex: ['cadastro_mapa','dt_emissao'],\n    render: ((date) => getFullDate(date)),\n  },\n  {\n    title: 'PerÃ­odo',\n    dataIndex: ['cadastro_mapa','periodo'],\n    render: ((date) => getPeriodo(date)),\n  },\n  {\n    title: 'Ano',\n    dataIndex: ['cadastro_mapa','ano'],\n  },\n];\n\nfunction getPeriodo(e){\n  if (e === \"1\") {\n    return \"Janeiro\"\n  }\n  if (e === \"2\") {\n    return \"Fevereiro\"\n  }\n  if (e === \"3\") {\n    return \"MarÃ§o\"\n  }\n  if (e === \"4\") {\n    return \"Abril\"\n  }\n  if (e === \"5\") {\n    return \"Maio\"\n  }\n  if (e === \"6\") {\n    return \"Junho\"\n  }\n  if (e === \"7\") {\n    return \"Julho\"\n  }\n  if (e === \"8\") {\n    return \"Agosto\"\n  }\n  if (e === \"9\") {\n    return \"Setembro\"\n  }\n  if (e === \"10\") {\n    return \"Outubro\"\n  }\n  if (e === \"11\") {\n    return \"Novembro\"\n  }\n  if (e === \"12\") {\n    return \"Dezembro\"\n  }\n}\nfunction getFullDate(e){\n  return moment(e).format(dateFormat)\n}\nclass PesquisaMapaPI extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: true,\n      select_permission: undefined,\n      cadastrar_tabela: false,\n      selectedRowKeys: [], // Check here to configure the default column\n      loading: false,\n      editar: false,\n      novo: false,\n      periodo: 0,\n      data: [],\n      dt_inicio: new Date(),\n      dt_fim: new Date(),\n\n    }\n    this.Update = this.Update.bind(this)\n    this.start = this.start.bind(this)\n    this.onSelectChange = this.onSelectChange.bind(this)\n    this.novo = this.novo.bind(this)\n    this.editar = this.editar.bind(this)\n\n  }\n  Update(e) {\n    this.setState(e)\n  }\n  start = () => {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  onSelectChange = selectedRowKeys => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n  novo() {\n    this.setState({ 'novo': true })\n  }\n\n\n  editar() {\n    if (this.state.selectedRowKeys.length === 1) {\n\n      console.log(this.state.selectedRowKeys[0], '------------------Envio para ediÃ§Ã£o')\n      this.setState({ 'editar': true })\n    } else {\n      alert(\"Selecionar apenas uma opÃ§Ã£o para realizar a ediÃ§Ã£o\")\n    }\n  }\n\n\n\n  CloseModal() {\n    this.props.history.push('/')\n    this.setState({\n      visible: false,\n    });\n  }\n\n  Consulta() {\n    let newData = []\n    let dt_inicio = this.state.dt_inicio\n    let dt_fim = this.state.dt_fim\n    let momentInicio, momentFim\n\n    if (dt_inicio != \"\"){\n      momentInicio = moment(this.state.dt_inicio, dateFormat)\n      dt_inicio = momentInicio.format(dateFormatEn);\n    }else{\n      alert(\"Para efetuar a busca Ã© necessÃ¡rio selecionar uma data de inÃ­cio\")\n    }\n    if (dt_fim != \"\"){\n      momentFim = moment(this.state.dt_fim, dateFormat)\n      dt_fim = momentFim.format(dateFormatEn);\n    }else{\n      alert(\"Para efetuar a busca Ã© necessÃ¡rio selecionar uma data final\")\n    }\n    if (momentInicio.isAfter(momentFim)){\n      alert(\"Para efetuar a busca Ã© necessÃ¡rio que a data inicial seja anterior a data final\")\n    }\n    \n    let url = '/api/consultamapapi/'+dt_inicio+\"/\"+dt_fim\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((r) => r.json())\n      .then((json) => {\n        this.setState({'data':json.resultado})\n        console.log(this.state.data)\n      })\n    this.setState({ 'data': newData })\n  }\n\n  render() {\n    const { loading, selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n\n    return (\n      <div style={{ marginBottom: 16 }}>\n        <span style={{ marginLeft: 8 }}>\n          {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n        </span>\n        {/* </div>\n            <div> */}\n        <Modal\n          width={600}\n          title=\"Pesquisa Mapa/PI\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={() => { this.CloseModal() }}>\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={() => { this.novo() }}>\n              Novo\n            </Button>,\n            <Button key=\"Pesquisar\" type=\"primary\" onClick={() => { this.Consulta() }}>\n              Pesquisar\n            </Button>,\n            <Button key=\"Editar\" type=\"primary\" onClick={() => { this.editar() }}>\n              Editar\n            </Button>,\n\n\n          ]}\n        >\n          <table>\n                <tr>\n                  <th>\n                    Data de EmissÃ£o de: <br />\n                    <DatePicker\n                      defaultValue={moment(this.state.dt_inicio, dateFormat)} format={dateFormat} picker=\"dt_inicio\" \n                      onChange={(e) => { (e != null) ?this.setState({ \"dt_inicio\": moment(e) }) :this.setState({ \"dt_inicio\": \"\" })}} />\n                  </th>\n                  <th>\n                    AtÃ©: <br />\n                    <DatePicker\n                      defaultValue={moment(this.state.dt_fim, dateFormat)} format={dateFormat} picker=\"dt_fim\" \n                      onChange={(e) => { (e != null) ?this.setState({ \"dt_fim\": moment(e) }) :this.setState({ \"dt_fim\": \"\" })}} />\n                  </th>\n                </tr>\n          </table>\n          <div>\n\n\n            <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n          </div>\n\n\n\n\n        </Modal>\n\n        {this.state.novo === true &&\n          <CadMapaPi callbackModal={(e) => { this.setState(e) }} />\n        }\n\n        {this.state.editar === true &&\n          <CadMapaPi mapapi={this.state.selectedRowKeys[0]} callbackModal={(e) => { this.setState(e) }} />\n        }\n\n      </div>\n\n    );\n  }\n}\n\nexport default PesquisaMapaPI;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/container/Cadastro_MapaPI.js",["359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport { Modal, Button, Select, Tabs, Table, DatePicker, Checkbox, Radio, Space, InputNumber, AutoComplete } from 'antd';\nimport { Input } from 'antd';\nimport moment from 'moment';\nimport { isCPF, formatToCPF, formatToPhone } from 'brazilian-values';\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst yearFormat = 'YYYY';\nconst dateFormat = 'DD/MM/YYYY';\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\nconst { TextArea } = Input;\n\nconst columns = [\n  {\n    title: 'ColocaÃ§Ã£o',\n    width: 250,\n    dataIndex: 'colocacao',\n    fixed: \"left\",\n  },\n  {\n    title: '1',\n    dataIndex: 'um',\n  },\n  {\n    title: '2',\n    dataIndex: 'dois',\n  },\n  ,\n  {\n    title: '3',\n    dataIndex: 'tres',\n  },\n  ,\n  {\n    title: '4',\n    dataIndex: 'quatro',\n  },\n  ,\n  {\n    title: '5',\n    dataIndex: 'cinco',\n  },\n  ,\n  {\n    title: '6',\n    dataIndex: 'seis',\n  },\n  ,\n  {\n    title: '7',\n    dataIndex: 'sete',\n  },\n  ,\n  {\n    title: '8',\n    dataIndex: 'oito',\n  },\n  ,\n  {\n    title: '9',\n    dataIndex: 'nove',\n  },\n  ,\n  {\n    title: '10',\n    dataIndex: 'dez',\n  },\n  ,\n  {\n    title: '11',\n    dataIndex: 'onze',\n  },\n  ,\n  {\n    title: '12',\n    dataIndex: 'doze',\n  },\n  ,\n  {\n    title: '13',\n    dataIndex: 'treze',\n  },\n  ,\n  {\n    title: '14',\n    dataIndex: 'quatorze',\n  },\n  ,\n  {\n    title: '15',\n    dataIndex: 'quinze',\n  },\n  ,\n  {\n    title: '16',\n    dataIndex: 'dezesseis',\n  },\n  ,\n  {\n    title: '17',\n    dataIndex: 'dezessete',\n  },\n  ,\n  {\n    title: '18',\n    dataIndex: 'dezoito',\n  },\n  ,\n  {\n    title: '19',\n    dataIndex: 'dezenove',\n  },\n  ,\n  {\n    title: '20',\n    dataIndex: 'vinte',\n  },\n  ,\n  {\n    title: '21',\n    dataIndex: 'vinte_um',\n  },\n  ,\n  {\n    title: '22',\n    dataIndex: 'vinte_dois',\n  },\n  ,\n  {\n    title: '23',\n    dataIndex: 'vinte_tres',\n  },\n  ,\n  {\n    title: '24',\n    dataIndex: 'vinte_quatro',\n  },\n  ,\n  {\n    title: '25',\n    dataIndex: 'vinte_cinco',\n  },\n  ,\n  {\n    title: '26',\n    dataIndex: 'vinte_seis',\n  },\n  ,\n  {\n    title: '27',\n    dataIndex: 'vinte_sete',\n  },\n  ,\n  {\n    title: '28',\n    dataIndex: 'vinte_oito',\n  },\n  ,\n  {\n    title: '29',\n    dataIndex: 'vinte_nove',\n  },\n  ,\n  {\n    title: '30',\n    dataIndex: 'trinta',\n  },\n  ,\n  {\n    title: '31',\n    dataIndex: 'trinta_um',\n  },\n  {\n    title: 'Total',\n    dataIndex: 'total',\n    fixed: \"right\",\n  },\n\n];\n\nfunction getRandomInt(max, min = 0) {\n  return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n}\n\nconst searchResult = (query) =>\n  new Array(getRandomInt(5))\n    .join('.')\n    .split('.')\n    .map((_, idx) => {\n      const category = `${query}${idx}`;\n      return {\n        value: category,\n        label: (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <span>\n              Found {query} on{' '}\n              <a\n                href={`https://s.taobao.com/search?q=${query}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {category}\n              </a>\n            </span>\n            <span>{getRandomInt(200, 100)} results</span>\n          </div>\n        ),\n      };\n    });\n\nclass Tabela2 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cod_mapa_pi: null,\n      visible: true,\n      select_permission: undefined,\n      selectedRows: [],\n      dataSource: [],\n      valores: [],\n      agencias: [],\n      anunciantes: [],\n      veiculos: [],\n      numero_agencia: \"\",\n      dt_emissao: new Date(),\n      year: new Date(),\n      periodo: 0,\n      colocacao: \"\",\n      agencia: \"\",\n      anunciante: \"\",\n      veiculo: \"\",\n      servico: \"\",\n      campanha: \"\",\n      produto: \"\",\n      titulo: \"\",\n      dt_vencimento: new Date(),\n      observacao: \"\",\n      nota_fiscal: \"\",\n      saac: \"\",\n      empenho: \"\",\n      faturamento_expansao: false,\n      faturamento_veiculo: false,\n      mapa_de_programacao: false,\n      imprimir: 1,\n      faturar: 1,\n      total: 0,\n      valor_total: 0.0,\n      valor_bruto: 0.0,\n      valor_normal: 0.0,\n      valor_liquido: 0.0,\n      comissao: 0,\n      valor_comissao: 0.0,\n      comissao_normal: 0,\n      valor_comissao_normal: 0.0,\n      comissao_parceiro: 0,\n      valor_comissao_parceiro: 0.0,\n    }\n    this.incluir = this.incluir.bind(this)\n    this.excluir = this.excluir.bind(this)\n  }\n\n  CloseModal() {\n    this.setState({ 'visible': false })\n    this.props.callbackModal({ 'editar': false })\n    this.props.callbackModal({ 'novo': false })\n  }\n\n  cadastrar() {\n    let dados_cadastro = {\n      'id': this.state.cod_mapa_pi,\n      'numero_agencia': this.state.numero_agencia,\n      'dt_emissao': moment(this.state.dt_emissao).format(dateFormat),\n      'periodo': this.state.periodo,\n      'ano' : moment(this.state.year).format(yearFormat),\n      'cod_agencia': this.state.agencia,\n      'cod_anunciante': this.state.anunciante,\n      'cod_veiculo': this.state.veiculo,\n      'servico': this.state.servico,\n      'colocacoes': this.state.dataSource,\n      'campanha': this.state.campanha,\n      'produto': this.state.produto,\n      'titulo' : this.state.titulo,\n      'dt_vencimento': moment(this.state.dt_vencimento).format(dateFormat),\n      'observacao' : this.state.observacao,\n      'nota_fiscal': this.state.nota_fiscal,\n      'saac': this.state.saac,\n      'empenho': this.state.empenho,\n      'fat_expansao': this.state.faturamento_expansao,\n      'fat_veiculo': this.state.faturamento_veiculo,\n      'mapa_prog': this.state.mapa_de_programacao,\n      'imprimir': this.state.imprimir,\n      'faturar' : this.state.faturar,\n      'valor_total' : this.state.valor_total,\n      'valor_bruto' : this.state.valor_bruto,\n      'comissao_ag' : this.state.comissao,\n      'valor_comissao' : this.state.valor_comissao,\n      'valor_normal' : this.state.valor_normal,\n      'comissao' : this.state.comissao_normal,\n      'valor_comissao_normal' : this.state.valor_comissao_normal,\n      'valor_liquido' : this.state.valor_liquido,\n    }\n    \n    console.log(JSON.stringify({\n      'cadastro_mapa': dados_cadastro,\n    })) \n\n    fetch('/api/cadastromapapi', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cadastro_mapa': dados_cadastro,\n      })\n    })\n      .then((r) => r.json())\n      .then((json) => {\n        if ('return' in json) {\n          alert(\"Mapa cadastrado com sucesso!\")\n          this.props.callbackModal({ 'novo': false })\n        } if ('msg' in json) {\n          alert(json.msg)\n          this.props.callbackModal({ 'editar': false })\n        } else {\n          alert(json)\n        }\n      })\n  }\n\n  excluir() {\n    let dados = this.state.dataSource\n    this.state.selectedRows.map(x => {\n      let index = dados.indexOf(x);\n      console.log(index)\n      dados.splice(index, 1);\n    })\n    this.setState({ dataSource: [...dados] })\n    this.setState({ selectedRows: [] })\n  }\n\n  onSelectChange = (selectedRowKeys, selectedRows) => {\n    this.setState({ selectedRows });\n  }\n\n  onChangeSetValueAndCalculateTotal(key, value) {\n    let total = 0\n    this.state.valores[parseInt(key)] = parseInt(value);\n    for (let i = 1; i < this.state.valores.length; i++) {\n      total += this.state.valores[i] === undefined ? 0 : this.state.valores[i];\n    }\n    this.setState({ total: total })\n  }\n\n  onChangeSetValorBruto(value) {\n    this.setState({ valor_total: parseFloat(value), valor_bruto: parseFloat(value) })\n    this.onChangeSetValorComissao(this.state.comissao, parseFloat(value))\n  }\n\n  onChangeSetValorComissao(value, valorTotal) {\n    let totalComissao = parseInt(value) * valorTotal / 100\n    this.setState({ comissao: value })\n    this.onChangeSetValorNormal(parseFloat(totalComissao), valorTotal)\n  }\n\n  onChangeSetValorNormal(value, valorTotal) {\n    this.setState({ valor_comissao: parseFloat(value), valor_normal: valorTotal - parseFloat(value) })\n    this.onChangeSetValorComissaoNormal(this.state.comissao_normal, valorTotal - parseFloat(value))\n  }\n\n  onChangeSetValorComissaoNormal(value, valorTotal) {\n    let totalComissao = parseInt(value) * valorTotal / 100\n    this.setState({ comissao_normal: value })\n    this.onChangeSetValorLiquido(parseFloat(totalComissao), valorTotal)\n  }\n\n  onChangeSetValorLiquido(value, valorTotal) {\n    console.log(valorTotal)\n    this.setState({ valor_comissao_normal: parseFloat(value), valor_liquido: valorTotal - parseFloat(value) })\n    this.onChangeSetValorComissaoParceiro(this.state.comissao_parceiro, parseFloat(value))\n  }\n\n  onChangeSetValorComissaoParceiro(value, valorTotal) {\n    let totalComissao = parseInt(value) * valorTotal / 100\n    this.setState({ comissao_parceiro: value })\n    this.setState({ valor_comissao_parceiro: parseFloat(totalComissao) })\n  }\n\n  incluir() {\n    var defaultValue = 0\n    let row = {\n      colocacao: this.state.colocacao,\n      um: (this.state.valores[1] === undefined) ? defaultValue : this.state.valores[1],\n      dois: (this.state.valores[2] === undefined) ? defaultValue : this.state.valores[2],\n      tres: (this.state.valores[3] === undefined) ? defaultValue : this.state.valores[3],\n      quatro: (this.state.valores[4] === undefined) ? defaultValue : this.state.valores[4],\n      cinco: (this.state.valores[5] === undefined) ? defaultValue : this.state.valores[5],\n      seis: (this.state.valores[6] === undefined) ? defaultValue : this.state.valores[6],\n      sete: (this.state.valores[7] === undefined) ? defaultValue : this.state.valores[7],\n      oito: (this.state.valores[8] === undefined) ? defaultValue : this.state.valores[8],\n      nove: (this.state.valores[9] === undefined) ? defaultValue : this.state.valores[9],\n      dez: (this.state.valores[10] === undefined) ? defaultValue : this.state.valores[10],\n      onze: (this.state.valores[11] === undefined) ? defaultValue : this.state.valores[11],\n      doze: (this.state.valores[12] === undefined) ? defaultValue : this.state.valores[12],\n      treze: (this.state.valores[13] === undefined) ? defaultValue : this.state.valores[13],\n      quatorze: (this.state.valores[14] === undefined) ? defaultValue : this.state.valores[14],\n      quinze: (this.state.valores[15] === undefined) ? defaultValue : this.state.valores[15],\n      dezesseis: (this.state.valores[16] === undefined) ? defaultValue : this.state.valores[16],\n      dezessete: (this.state.valores[17] === undefined) ? defaultValue : this.state.valores[17],\n      dezoito: (this.state.valores[18] === undefined) ? defaultValue : this.state.valores[18],\n      dezenove: (this.state.valores[19] === undefined) ? defaultValue : this.state.valores[19],\n      vinte: (this.state.valores[20] === undefined) ? defaultValue : this.state.valores[20],\n      vinte_um: (this.state.valores[21] === undefined) ? defaultValue : this.state.valores[21],\n      vinte_dois: (this.state.valores[22] === undefined) ? defaultValue : this.state.valores[22],\n      vinte_tres: (this.state.valores[23] === undefined) ? defaultValue : this.state.valores[23],\n      vinte_quatro: (this.state.valores[24] === undefined) ? defaultValue : this.state.valores[24],\n      vinte_cinco: (this.state.valores[25] === undefined) ? defaultValue : this.state.valores[25],\n      vinte_seis: (this.state.valores[26] === undefined) ? defaultValue : this.state.valores[26],\n      vinte_sete: (this.state.valores[27] === undefined) ? defaultValue : this.state.valores[27],\n      vinte_oito: (this.state.valores[28] === undefined) ? defaultValue : this.state.valores[28],\n      vinte_nove: (this.state.valores[29] === undefined) ? defaultValue : this.state.valores[29],\n      trinta: (this.state.valores[30] === undefined) ? defaultValue : this.state.valores[30],\n      trinta_um: (this.state.valores[31] === undefined) ? defaultValue : this.state.valores[31],\n      total: this.state.total,\n    }\n\n    const { dataSource } = this.state;\n    this.setState({ dataSource: [...dataSource, row] })\n\n    console.log(this.state, '----- dados row')\n  }\n\n\n  render() {\n    const { loading, selectedRows, dataSource } = this.state;\n    const rowSelection = {\n      selectedRows,\n      onChange: this.onSelectChange,\n    };\n\n    const handleSearchAgencia = (value) => {\n      fetch('/api/consulta_agencia', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_agencia': { 'nome': value },\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          var dados = json.funcionarios.map(person => {\n            return {\n              key: person.key,\n              value: person.key + ' - ' + person.nome,\n              label: (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <span>\n                    {person.nome}\n                  </span>\n                </div>\n              ),\n            }\n          });\n\n          this.setState({ agencias: dados })\n        })\n    };\n    const onSelectAgencia = (value, option) => {\n      this.setState({ agencia: option.key })\n    };\n\n    const handleSearchAnunciante = (value) => {\n      fetch('/api/consulta_anunciante', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_anunciante': { 'nome': value },\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          var dados = json.anunciantes.map(anunciante => {\n            return {\n              value: anunciante.key + ' - ' + anunciante.nome,\n              key: anunciante.key,\n              label: (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <span>\n                    {anunciante.nome}\n                  </span>\n                </div>\n              ),\n            }\n          });\n\n          this.setState({ anunciantes: dados })\n        })\n    };\n    const onSelectAnunciante = (value, option) => {\n      this.setState({ anunciante: option.key })\n    };\n    const handleSearchVeiculo = (value) => {\n      fetch('/api/consulta_veiculo', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'consulta_veiculo': { 'nome': value },\n        })\n      })\n        .then((r) => r.json())\n        .then((json) => {\n          var dados = json.veiculos.map(veiculo => {\n            return {\n              key: veiculo.key,\n              value: veiculo.key + ' - ' + veiculo.nome,\n              label: (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <span>\n                    {veiculo.nome}\n                  </span>\n                </div>\n              ),\n            }\n          });\n\n          this.setState({ veiculos: dados })\n        })\n    };\n    const onSelectVeiculo = (value, option) => {\n      this.setState({ veiculo: option.key })\n    };\n    return (\n      <div>\n        <Modal\n          width={1000}\n          title=\"Cadastro de Mapa de ProgramaÃ§Ã£o\"\n          visible={this.state.visible}\n          onCancel={(e)=>this.CloseModal()}\n          footer={[\n            <Button key=\"back\" onClick={(e) => this.CloseModal()}>\n              Cancelar\n            </Button>,\n            <Button key=\"Cadastrar\" type=\"primary\" onClick={(e) =>this.cadastrar()}>\n              Cadastrar\n            </Button>,\n          ]}>\n          <Tabs onChange={console.log()} type=\"card\">\n            <TabPane tab=\"Dados bÃ¡sicos\" key=\"1\">\n              <table>\n                <tr>\n                  <th>\n                    NÃºmero da AgÃªncia: <br />\n                    <Input\n                      style={{ width: 220 }}\n                      defaultValue={this.state.desc}\n                      onChange={(e) => { this.setState({ \"numero_agencia\": e.target.value }) }}\n                      placeholder=\"NÃºmero da AgÃªncia\" />\n                  </th>\n                  <th>\n                    EmissÃ£o: <br />\n                    <DatePicker format={dateFormatList}\n                      defaultValue={moment(this.state.dt_emissao, dateFormat)} format={dateFormat}\n                      onChange={(e) => { (e != null) ?this.setState({ \"dt_emissao\": moment(e) }) :this.setState({ \"dt_emissao\": \"\" })}} \n                    />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    PerÃ­odo: <br />\n                    <Select\n                      showSearch\n                      style={{ width: 220 }}\n                      placeholder=\"PerÃ­odo\"\n                      optionFilterProp=\"children\"\n                      filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                      onChange={(e) => { this.setState({ \"periodo\": e }) }}\n                    >\n                      <Option value=\"1\">Janeiro</Option>\n                      <Option value=\"2\">Fevereiro</Option>\n                      <Option value=\"3\">MarÃ§o</Option>\n                      <Option value=\"4\">Abril</Option>\n                      <Option value=\"5\">Maio</Option>\n                      <Option value=\"6\">Junho</Option>\n                      <Option value=\"7\">Julho</Option>\n                      <Option value=\"8\">Agosto</Option>\n                      <Option value=\"9\">Setembro</Option>\n                      <Option value=\"10\">Outubro</Option>\n                      <Option value=\"11\">Novembro</Option>\n                      <Option value=\"12\">Dezembro</Option>\n                    </Select>\n                  </th>\n                  <th>\n                    Ano: <br />\n                    <DatePicker\n                      defaultValue={moment(this.state.year, yearFormat)} format={yearFormat} picker=\"year\" \n                      onChange={(e) => { (e != null) ?this.setState({ \"year\": moment(e) }) :this.setState({ \"year\": \"\" })}} />\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    AgÃªncia: <br />\n                    <AutoComplete\n                      dropdownMatchSelectWidth={252}\n                      style={{\n                        width: 430,\n                      }}\n                      options={this.state.agencias}\n                      onSelect={onSelectAgencia}\n                      onSearch={handleSearchAgencia}>\n                      <Input.Search size=\"large\" placeholder=\"AgÃªncia\" enterButton />\n                    </AutoComplete>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Anunciante: <br />\n                    <AutoComplete\n                      dropdownMatchSelectWidth={252}\n                      style={{\n                        width: 430,\n                      }}\n                      options={this.state.anunciantes}\n                      onSelect={onSelectAnunciante}\n                      onSearch={handleSearchAnunciante}\n                      optionLabelProp=\"title\">\n                      <Input.Search size=\"large\" placeholder=\"Anunciante\" enterButton />\n                    </AutoComplete>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    VeÃ­culo: <br />\n                    <AutoComplete\n                      dropdownMatchSelectWidth={252}\n                      style={{\n                        width: 430,\n                      }}\n                      options={this.state.veiculos}\n                      onSelect={onSelectVeiculo}\n                      onSearch={handleSearchVeiculo}>\n                      <Input.Search size=\"large\" placeholder=\"VeÃ­culo\" enterButton />\n                    </AutoComplete>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    ServiÃ§o: <br />\n                    <TextArea\n                      style={{ width: 440 }}\n                      defaultValue={this.state.servico}\n                      onChange={(e) => { this.setState({ \"servico\": e.target.value }) }}\n                      rows={4} />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n            <TabPane tab=\"Dados das ColocaÃ§Ãµes\" key=\"2\">\n              <div style={{ alignItems: \"center\", justifyContent: \"center\", display: \"flex\" }}>\n                <table>\n                  <tr>\n                    <th>\n                      ColocaÃ§Ã£o: <br />\n                      <Input\n                        style={{ width: 430 }}\n                        defaultValue={this.state.colocacao}\n                        onChange={(e) => { this.setState({ \"colocacao\": e.target.value }) }}\n                        placeholder=\"ColocaÃ§Ã£o\" />\n                    </th>\n                  </tr>\n                </table>\n              </div>\n              <div style={{ alignItems: \"center\", justifyContent: \"center\", display: \"flex\" }}>\n                <table>\n                  <tr>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      1<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[1]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(1, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"1\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      2<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[2]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(2, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"2\" />\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      3<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[3]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(3, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"3\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      4<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[4]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(4, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"4\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      5<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[5]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(5, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"5\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      6<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[6]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(6, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"6\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      7<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[7]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(7, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"7\" />\n\n                    </th>\n                  </tr>\n                  <tr>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      8<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[8]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(8, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"8\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      9<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[9]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(9, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"9\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      10<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[10]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(10, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"10\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      11<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[11]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(11, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"11\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      12<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[12]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(12, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"12\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      13<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[13]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(13, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"13\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      14<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[14]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(14, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"14\" />\n\n                    </th>\n                  </tr>\n                  <tr>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      15<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[15]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(15, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"15\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      16<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[16]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(16, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"16\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      17<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[17]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(17, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"17\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      18<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[18]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(18, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"18\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      19<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[19]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(19, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"19\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      20<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[20]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(20, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"20\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      21<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[21]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(21, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"21\" />\n\n                    </th>\n                  </tr>\n                  <tr>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      22<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[22]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(22, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"22\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      23<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[23]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(23, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"23\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      24<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[24]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(24, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"24\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      25<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[25]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(25, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"25\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      26<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[26]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(26, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"26\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      27<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[27]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(27, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"27\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      28<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[28]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(28, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"28\" />\n\n                    </th>\n                  </tr>\n                  <tr>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      29<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[29]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(29, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"29\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      30<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[30]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(30, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"30\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      31<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.valores[31]}\n                        onChange={(e) => { this.onChangeSetValueAndCalculateTotal(31, ((e.target.value === \"\") ? 0 : e.target.value)) }}\n                        placeholder=\"31\" />\n\n                    </th>\n                    <th style={{ \"text-align\": \"center\" }}>\n                      Total<br />\n                      <Input\n                        type=\"number\" min=\"0\"\n                        style={{ width: 60, textAlign: \"center\" }}\n                        defaultValue={this.state.total}\n                        value={this.state.total}\n                        disabled\n                        placeholder=\"0\" />\n                    </th>\n                  </tr>\n                </table>\n              </div>\n              <div style={{ alignItems: \"center\", justifyContent: \"center\", display: \"flex\" }}>\n                <table>\n                  <tr />\n                  <tr>\n                    <th><Button key=\"excluir\" onClick={this.excluir}>\n                      Excluir\n                    </Button>\n                      <Button key=\"inserir\" onClick={this.incluir}>\n                        Inserir\n                      </Button></th>\n                  </tr>\n                </table>\n              </div>\n              <div>\n\n                <Table\n                  scroll={{ x: 3000 }}\n                  rowSelection={rowSelection} columns={columns} dataSource={dataSource}\n                  rowKey={row => row.colocacao}\n                  rowClassName={() => 'editable-row'} />\n              </div>\n            </TabPane>\n            <TabPane tab=\"Dados da Campanha\" key=\"3\">\n              <table>\n                <tr>\n                  <th>\n                    Campanha: <br />\n                    <Input\n                      style={{ width: 440 }}\n                      defaultValue={this.state.campanha}\n                      onChange={(e) => { this.setState({ \"campanha\": e.target.value }) }}\n                      placeholder=\"Campanha\" />\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    Produto: <br />\n                    <Input\n                      style={{ width: 220 }}\n                      defaultValue={this.state.produto}\n                      onChange={(e) => { this.setState({ \"produto\": e.target.value }) }}\n                      placeholder=\"Produto\" />\n                  </th>\n                  <th>\n                    TÃ­tulo: <br />\n                    <Input\n                      style={{ width: 218 }}\n                      defaultValue={this.state.titulo}\n                      onChange={(e) => { this.setState({ \"titulo\": e.target.value }) }}\n                      placeholder=\"Titulo\" />\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    Vencimento: <br />\n                    <DatePicker format={dateFormatList}\n                      defaultValue={moment(this.state.dt_vencimento, dateFormat)} format={dateFormat}\n                      onChange={(e) => { (e != null) ?this.setState({ \"dt_vencimento\": moment(e) }) :this.setState({ \"dt_vencimento\": \"\" })}}\n                    />\n                  </th>\n                </tr>\n              </table>\n              <table>\n                <tr>\n                  <th>\n                    ObservaÃ§Ãµes: <br />\n                    <TextArea\n                      style={{ width: 440 }}\n                      defaultValue={this.state.observacao}\n                      onChange={(e) => { this.setState({ \"observacao\": e.target.value }) }}\n                      rows={4} />\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n            <TabPane tab=\"Dados de Faturamento\" key=\"4\">\n              <table>\n\n                <tr>\n                  <th>\n                    Nota Fiscal: <br />\n                    <Input\n                      style={{ width: 220 }}\n                      defaultValue={this.state.nota_fiscal}\n                      onChange={(e) => { this.setState({ \"nota_fiscal\": e.target.value }) }}\n                      placeholder=\"Nota Fiscal\" />\n                  </th>\n                  <th>\n                    SAAC: <br />\n                    <Input\n                      style={{ width: 218 }}\n                      defaultValue={this.state.saac}\n                      onChange={(e) => { this.setState({ \"saac\": e.target.value }) }}\n                      placeholder=\"SAAC\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Empenho: <br />\n                    <Input\n                      style={{ width: 220 }}\n                      defaultValue={this.state.empenho}\n                      onChange={(e) => { this.setState({ \"empenho\": e.target.value }) }}\n                      placeholder=\"Empenho\" />\n                  </th>\n                </tr>\n              </table>\n              <table style={{ marginTop: '20px' }}>\n                <tr>\n                  <th>\n                    <Checkbox\n                      checked={this.state.faturamento_expansao}\n                      onChange={(e) => { this.setState({ \"faturamento_expansao\": e.target.checked }) }}>Faturamento ExpansÃ£o</Checkbox>\n                  </th>\n                  <th>\n                    <Checkbox\n                      checked={this.state.faturamento_veiculo}\n                      onChange={(e) => { this.setState({ \"faturamento_veiculo\": e.target.checked }) }}>Faturamento VeÃ­culo</Checkbox>\n                  </th>\n                  <th>\n                    <Checkbox\n                      checked={this.state.mapa_de_programacao}\n                      onChange={(e) => { this.setState({ \"mapa_de_programacao\": e.target.checked }) }}>Mapa de ProgramaÃ§Ã£o</Checkbox>\n                  </th>\n                </tr>\n              </table>\n              <table style={{ marginTop: '20px' }}>\n                <tr>\n                  <th>\n                    Imprimir pelo: <br />\n                    <Radio.Group onChange={(e) => { this.setState({ \"imprimir\": e.target.value }) }} value={this.state.imprimir}>\n                      <Radio.Button value={1}>Bruto</Radio.Button>\n                      <Radio.Button value={2}>Com Ag</Radio.Button>\n                      <Radio.Button value={3}>Normal</Radio.Button>\n                      <Radio.Button value={4}>ComissÃ£o</Radio.Button>\n                      <Radio.Button value={5}>LÃ­quido</Radio.Button>\n                    </Radio.Group>\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Faturar pelo: <br />\n                    <Radio.Group onChange={(e) => { this.setState({ \"faturar\": e.target.value }) }} value={this.state.faturar}>\n                      <Radio.Button value={1}>Bruto</Radio.Button>\n                      <Radio.Button value={3}>Normal</Radio.Button>\n                      <Radio.Button value={5}>LÃ­quido</Radio.Button>\n                    </Radio.Group>\n                  </th>\n                </tr>\n              </table>\n            </TabPane>\n            <TabPane tab=\"Valores\" key=\"5\">\n              <table>\n                <tr>\n                  <th>\n                    Valor Total R$<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\"\n                      precision=\"2\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.valor_total}\n                      onChange={(e) => { this.onChangeSetValorBruto(e) }}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Valor Bruto R$<br />\n                    <InputNumber\n                      type=\"number\"\n                      precision=\"2\"\n                      disabled\n                      style={{ width: 100, textAlign: \"center\" }}\n                      value={this.state.valor_bruto}\n                      defaultValue={this.state.valor_bruto}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    ComissÃ£o Ag %<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\" max=\"100\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.comissao}\n                      value={this.state.comissao}\n                      onChange={(e) => { this.onChangeSetValorComissao(e, this.state.valor_total) }}\n                      placeholder=\"100%\" />\n                  </th>\n                  <th>\n                    ComissÃ£o Ag R$<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\"\n                      precision=\"2\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.valor_comissao}\n                      value={this.state.valor_comissao}\n                      onChange={(e) => { this.onChangeSetValorNormal(e, this.state.valor_total) }}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Valor Normal R$<br />\n                    <InputNumber\n                      type=\"number\"\n                      precision=\"2\"\n                      disabled\n                      style={{ width: 100, textAlign: \"center\" }}\n                      value={this.state.valor_normal}\n                      defaultValue={this.state.valor_normal}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    ComissÃ£o %<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\" max=\"100\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.comissao_normal}\n                      value={this.state.comissao_normal}\n                      onChange={(e) => { this.onChangeSetValorComissaoNormal(e, this.state.valor_normal) }}\n                      placeholder=\"100%\" />\n                  </th>\n                  <th>\n                    ComissÃ£o R$<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\"\n                      precision=\"2\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.valor_comissao_normal}\n                      value={this.state.valor_comissao_normal}\n                      onChange={(e) => { this.onChangeSetValorLiquido(e, this.state.valor_normal) }}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                <tr>\n                  <th>\n                    Valor LÃ­quido R$<br />\n                    <InputNumber\n                      type=\"number\"\n                      precision=\"2\"\n                      disabled\n                      style={{ width: 100, textAlign: \"center\" }}\n                      value={this.state.valor_liquido}\n                      defaultValue={this.state.valor_liquido}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr>\n                {/* <tr>\n                  <th>\n                    ComissÃ£o Parceiro %<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\"  max=\"100\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.comissao_parceiro}\n                      value={this.state.comissao_parceiro}\n                      onChange={(e) => { this.onChangeSetValorComissaoParceiro(e, this.state.valor_liquido) }}\n                      placeholder=\"100%\" />\n                  </th>\n                  <th>\n                    ComissÃ£o Parceiro R$<br />\n                    <InputNumber\n                      type=\"number\" min=\"0\"\n                      precision=\"2\"\n                      style={{ width: 100, textAlign: \"center\" }}\n                      defaultValue={this.state.valor_comissao_parceiro}\n                      value={this.state.valor_comissao_parceiro}\n                      onChange={(e) => { this.setState({ valor_comissao_parceiro: parseFloat(e) }) }}\n                      placeholder=\"0,00\" />\n                  </th>\n                </tr> */}\n              </table>\n            </TabPane>\n          </Tabs>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Tabela2;\n\n\n","/Users/gucarvalho/go/src/github.com/aquino/AGENCIA/agencia/src/Login.js",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"372","replacedBy":"376"},{"ruleId":"374","replacedBy":"377"},{"ruleId":"378","severity":1,"message":"379","line":6,"column":16,"nodeType":"380","messageId":"381","endLine":6,"endColumn":29},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"385","line":3,"column":25,"nodeType":"380","messageId":"381","endLine":3,"endColumn":31},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"388","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":15},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":50,"nodeType":"380","messageId":"381","endLine":3,"endColumn":54},{"ruleId":"378","severity":1,"message":"389","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":4,"column":17,"nodeType":"380","messageId":"381","endLine":4,"endColumn":28},{"ruleId":"378","severity":1,"message":"392","line":7,"column":9,"nodeType":"380","messageId":"381","endLine":7,"endColumn":17},{"ruleId":"378","severity":1,"message":"393","line":8,"column":7,"nodeType":"380","messageId":"381","endLine":8,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":9,"column":7,"nodeType":"380","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"395","line":7,"column":8,"nodeType":"380","messageId":"381","endLine":7,"endColumn":16},{"ruleId":"378","severity":1,"message":"396","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":21},{"ruleId":"378","severity":1,"message":"382","line":2,"column":17,"nodeType":"380","messageId":"381","endLine":2,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":2,"column":28,"nodeType":"380","messageId":"381","endLine":2,"endColumn":33},{"ruleId":"378","severity":1,"message":"397","line":2,"column":35,"nodeType":"380","messageId":"381","endLine":2,"endColumn":44},{"ruleId":"378","severity":1,"message":"384","line":3,"column":10,"nodeType":"380","messageId":"381","endLine":3,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":3,"column":16,"nodeType":"380","messageId":"381","endLine":3,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":6,"column":10,"nodeType":"380","messageId":"381","endLine":6,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":6,"column":17,"nodeType":"380","messageId":"381","endLine":6,"endColumn":28},{"ruleId":"378","severity":1,"message":"394","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":305,"column":81,"nodeType":"400","endLine":305,"endColumn":100},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"397","line":1,"column":35,"nodeType":"380","messageId":"381","endLine":1,"endColumn":44},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"401","line":3,"column":10,"nodeType":"380","messageId":"381","endLine":3,"endColumn":15},{"ruleId":"378","severity":1,"message":"402","line":3,"column":17,"nodeType":"380","messageId":"381","endLine":3,"endColumn":23},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"394","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"403","severity":1,"message":"404","line":73,"column":7,"nodeType":"405","messageId":"406","endLine":73,"endColumn":12},{"ruleId":"403","severity":1,"message":"407","line":82,"column":7,"nodeType":"405","messageId":"406","endLine":82,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":252,"column":81,"nodeType":"400","endLine":252,"endColumn":100},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"408","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":31},{"ruleId":"378","severity":1,"message":"409","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":11},{"ruleId":"378","severity":1,"message":"393","line":49,"column":7,"nodeType":"380","messageId":"381","endLine":49,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":50,"column":7,"nodeType":"380","messageId":"381","endLine":50,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":52,"column":7,"nodeType":"380","messageId":"381","endLine":52,"endColumn":21},{"ruleId":"378","severity":1,"message":"410","line":53,"column":9,"nodeType":"380","messageId":"381","endLine":53,"endColumn":15},{"ruleId":"378","severity":1,"message":"411","line":191,"column":17,"nodeType":"380","messageId":"381","endLine":191,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"401","line":3,"column":10,"nodeType":"380","messageId":"381","endLine":3,"endColumn":15},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"410","line":7,"column":9,"nodeType":"380","messageId":"381","endLine":7,"endColumn":15},{"ruleId":"412","severity":1,"message":"413","line":47,"column":41,"nodeType":"414","messageId":"415","endLine":47,"endColumn":43},{"ruleId":"378","severity":1,"message":"411","line":84,"column":17,"nodeType":"380","messageId":"381","endLine":84,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"388","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":89,"column":19,"nodeType":"418","messageId":"406","endLine":89,"endColumn":21},{"ruleId":"416","severity":1,"message":"417","line":95,"column":16,"nodeType":"418","messageId":"406","endLine":95,"endColumn":18},{"ruleId":"378","severity":1,"message":"411","line":131,"column":13,"nodeType":"380","messageId":"381","endLine":131,"endColumn":20},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"394","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"403","severity":1,"message":"407","line":86,"column":7,"nodeType":"405","messageId":"406","endLine":86,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":286,"column":81,"nodeType":"400","endLine":286,"endColumn":100},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"419","line":6,"column":8,"nodeType":"380","messageId":"381","endLine":6,"endColumn":22},{"ruleId":"378","severity":1,"message":"408","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":31},{"ruleId":"378","severity":1,"message":"420","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"378","severity":1,"message":"409","line":14,"column":7,"nodeType":"380","messageId":"381","endLine":14,"endColumn":11},{"ruleId":"378","severity":1,"message":"393","line":52,"column":7,"nodeType":"380","messageId":"381","endLine":52,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":53,"column":7,"nodeType":"380","messageId":"381","endLine":53,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":55,"column":7,"nodeType":"380","messageId":"381","endLine":55,"endColumn":21},{"ruleId":"378","severity":1,"message":"410","line":56,"column":9,"nodeType":"380","messageId":"381","endLine":56,"endColumn":15},{"ruleId":"378","severity":1,"message":"411","line":194,"column":17,"nodeType":"380","messageId":"381","endLine":194,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"419","line":6,"column":8,"nodeType":"380","messageId":"381","endLine":6,"endColumn":22},{"ruleId":"378","severity":1,"message":"408","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":31},{"ruleId":"378","severity":1,"message":"409","line":13,"column":7,"nodeType":"380","messageId":"381","endLine":13,"endColumn":11},{"ruleId":"378","severity":1,"message":"393","line":51,"column":7,"nodeType":"380","messageId":"381","endLine":51,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":52,"column":7,"nodeType":"380","messageId":"381","endLine":52,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":54,"column":7,"nodeType":"380","messageId":"381","endLine":54,"endColumn":21},{"ruleId":"378","severity":1,"message":"410","line":55,"column":9,"nodeType":"380","messageId":"381","endLine":55,"endColumn":15},{"ruleId":"378","severity":1,"message":"411","line":193,"column":17,"nodeType":"380","messageId":"381","endLine":193,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"419","line":6,"column":8,"nodeType":"380","messageId":"381","endLine":6,"endColumn":22},{"ruleId":"378","severity":1,"message":"408","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":31},{"ruleId":"378","severity":1,"message":"420","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"378","severity":1,"message":"409","line":14,"column":7,"nodeType":"380","messageId":"381","endLine":14,"endColumn":11},{"ruleId":"378","severity":1,"message":"393","line":52,"column":7,"nodeType":"380","messageId":"381","endLine":52,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":53,"column":7,"nodeType":"380","messageId":"381","endLine":53,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":55,"column":7,"nodeType":"380","messageId":"381","endLine":55,"endColumn":21},{"ruleId":"378","severity":1,"message":"410","line":56,"column":9,"nodeType":"380","messageId":"381","endLine":56,"endColumn":15},{"ruleId":"378","severity":1,"message":"411","line":197,"column":17,"nodeType":"380","messageId":"381","endLine":197,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"387","line":3,"column":39,"nodeType":"380","messageId":"381","endLine":3,"endColumn":49},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"419","line":6,"column":8,"nodeType":"380","messageId":"381","endLine":6,"endColumn":22},{"ruleId":"378","severity":1,"message":"408","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":31},{"ruleId":"378","severity":1,"message":"409","line":13,"column":7,"nodeType":"380","messageId":"381","endLine":13,"endColumn":11},{"ruleId":"378","severity":1,"message":"393","line":51,"column":7,"nodeType":"380","messageId":"381","endLine":51,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":52,"column":7,"nodeType":"380","messageId":"381","endLine":52,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":54,"column":7,"nodeType":"380","messageId":"381","endLine":54,"endColumn":21},{"ruleId":"378","severity":1,"message":"410","line":55,"column":9,"nodeType":"380","messageId":"381","endLine":55,"endColumn":15},{"ruleId":"378","severity":1,"message":"411","line":193,"column":17,"nodeType":"380","messageId":"381","endLine":193,"endColumn":24},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"393","line":10,"column":7,"nodeType":"380","messageId":"381","endLine":10,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":273,"column":95,"nodeType":"400","endLine":273,"endColumn":118},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"389","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":5,"column":17,"nodeType":"380","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":5,"column":30,"nodeType":"380","messageId":"381","endLine":5,"endColumn":43},{"ruleId":"378","severity":1,"message":"393","line":10,"column":7,"nodeType":"380","messageId":"381","endLine":10,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":11,"column":7,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"378","severity":1,"message":"396","line":12,"column":7,"nodeType":"380","messageId":"381","endLine":12,"endColumn":21},{"ruleId":"378","severity":1,"message":"421","line":13,"column":9,"nodeType":"380","messageId":"381","endLine":13,"endColumn":16},{"ruleId":"378","severity":1,"message":"392","line":15,"column":9,"nodeType":"380","messageId":"381","endLine":15,"endColumn":17},{"ruleId":"422","severity":1,"message":"423","line":51,"column":16,"nodeType":"424","messageId":"425","endLine":51,"endColumn":81},{"ruleId":"378","severity":1,"message":"426","line":110,"column":11,"nodeType":"380","messageId":"381","endLine":110,"endColumn":16},{"ruleId":"427","severity":1,"message":"428","line":17,"column":6,"nodeType":"429","endLine":17,"endColumn":8,"suggestions":"430"},{"ruleId":"372","replacedBy":"431"},{"ruleId":"374","replacedBy":"432"},{"ruleId":"378","severity":1,"message":"382","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":26},{"ruleId":"378","severity":1,"message":"383","line":1,"column":28,"nodeType":"380","messageId":"381","endLine":1,"endColumn":33},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"401","line":3,"column":10,"nodeType":"380","messageId":"381","endLine":3,"endColumn":15},{"ruleId":"378","severity":1,"message":"385","line":3,"column":25,"nodeType":"380","messageId":"381","endLine":3,"endColumn":31},{"ruleId":"378","severity":1,"message":"386","line":3,"column":33,"nodeType":"380","messageId":"381","endLine":3,"endColumn":37},{"ruleId":"378","severity":1,"message":"393","line":6,"column":7,"nodeType":"380","messageId":"381","endLine":6,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":7,"column":7,"nodeType":"380","messageId":"381","endLine":7,"endColumn":18},{"ruleId":"378","severity":1,"message":"392","line":11,"column":9,"nodeType":"380","messageId":"381","endLine":11,"endColumn":17},{"ruleId":"378","severity":1,"message":"386","line":2,"column":33,"nodeType":"380","messageId":"381","endLine":2,"endColumn":37},{"ruleId":"378","severity":1,"message":"411","line":141,"column":13,"nodeType":"380","messageId":"381","endLine":141,"endColumn":20},{"ruleId":"378","severity":1,"message":"386","line":2,"column":33,"nodeType":"380","messageId":"381","endLine":2,"endColumn":37},{"ruleId":"378","severity":1,"message":"410","line":9,"column":9,"nodeType":"380","messageId":"381","endLine":9,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":145,"column":19,"nodeType":"418","messageId":"406","endLine":145,"endColumn":21},{"ruleId":"416","severity":1,"message":"417","line":151,"column":16,"nodeType":"418","messageId":"406","endLine":151,"endColumn":18},{"ruleId":"378","severity":1,"message":"411","line":179,"column":13,"nodeType":"380","messageId":"381","endLine":179,"endColumn":20},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":29},{"ruleId":"378","severity":1,"message":"433","line":3,"column":75,"nodeType":"380","messageId":"381","endLine":3,"endColumn":80},{"ruleId":"378","severity":1,"message":"389","line":6,"column":10,"nodeType":"380","messageId":"381","endLine":6,"endColumn":15},{"ruleId":"378","severity":1,"message":"390","line":6,"column":17,"nodeType":"380","messageId":"381","endLine":6,"endColumn":28},{"ruleId":"378","severity":1,"message":"391","line":6,"column":30,"nodeType":"380","messageId":"381","endLine":6,"endColumn":43},{"ruleId":"434","severity":1,"message":"435","line":15,"column":17,"nodeType":"429","messageId":"436","endLine":181,"endColumn":2},{"ruleId":"378","severity":1,"message":"437","line":187,"column":7,"nodeType":"380","messageId":"381","endLine":187,"endColumn":19},{"ruleId":"412","severity":1,"message":"413","line":340,"column":35,"nodeType":"414","messageId":"415","endLine":340,"endColumn":37},{"ruleId":"438","severity":1,"message":"439","line":355,"column":5,"nodeType":"440","endLine":355,"endColumn":23},{"ruleId":"378","severity":1,"message":"411","line":442,"column":13,"nodeType":"380","messageId":"381","endLine":442,"endColumn":20},{"ruleId":"398","severity":1,"message":"399","line":593,"column":80,"nodeType":"400","endLine":593,"endColumn":99},{"ruleId":"398","severity":1,"message":"399","line":1100,"column":83,"nodeType":"400","endLine":1100,"endColumn":102},"no-native-reassign",["441"],"no-negated-in-lhs",["442"],["441"],["442"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'Select' is defined but never used.","'Tabs' is defined but never used.","'DatePicker' is defined but never used.","'Input' is defined but never used.","'isCPF' is defined but never used.","'formatToCPF' is defined but never used.","'formatToPhone' is defined but never used.","'TextArea' is assigned a value but never used.","'dateFormat' is assigned a value but never used.","'monthFormat' is assigned a value but never used.","'HistFunc' is defined but never used.","'dateFormatList' is assigned a value but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Modal' is defined but never used.","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'obs'.","ObjectExpression","unexpected","Duplicate key 'estado'.","'getKeyThenIncreaseKey' is defined but never used.","'data' is assigned a value but never used.","'Option' is assigned a value but never used.","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'CadFuncionario' is defined but never used.","'CadAgencia' is defined but never used.","'TabPane' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'props' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'editRowsModel'. Either include it or remove the dependency array.","ArrayExpression",["443"],["441"],["442"],"'Space' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'searchResult' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"444","fix":"445"},"Update the dependencies array to be: [editRowsModel]",{"range":"446","text":"447"},[588,590],"[editRowsModel]"]